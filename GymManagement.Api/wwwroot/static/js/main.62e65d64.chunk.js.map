{"version":3,"sources":["Images/Logo/Logo_Desktop.png","Components/ValueSummary/ValueSummary.module.css","Components/DatePicker/DatePicker.module.css","Components/Header/Header.module.css","Components/NavigationArea/NavigationArea.module.css","Components/NavigationExpand/NavigationExpand.module.css","Components/DataTableRow/DataTableRow.module.css","Components/DataTable/DataTable.module.css","WorkAreas/LeadInformation/LeadInformation.module.css","Components/ContainedButton/ContainedButton.module.css","WorkAreas/Classes/Classes.module.css","WorkAreas/Mailchimp/ContactManagement/Setup/Setup.module.css","Components/WorkSpace/WorkSpace.module.css","WorkAreas/ClassSchedule/ClassSchedule.module.css","serviceWorker.js","Components/Header/Header.js","Utilities/FormUtility.js","Components/Form/Form.js","Components/Input/Input.js","Components/FloatingButton/FloatingButton.js","Components/Notification/Notification.js","Actions/NotificationActions.js","Settings.js","Services/GymManagementApiService.js","Components/Login/Login.js","Components/NavigationArea/NavigationArea.js","Components/NavigationExpand/NavigationExpand.js","WorkAreas/Dashboard/Dashboard.js","WorkAreas/Email/Email.js","Components/DataTableRow/DataTableRow.js","Components/DataTable/DataTable.js","Components/OutlinedSelect/OutlinedSelect.js","Components/DatePicker/DatePicker.js","Components/Modal/Modal.js","Actions/ModalActions.js","Components/ContactForm/ContactForm.js","Components/ValueSummary/ValueSummary.js","WorkAreas/MemberInformation/MemberInformation.js","Components/LeadForm/LeadForm.js","WorkAreas/LeadInformation/LeadInformation.js","Components/ContainedButton/ContainedButton.js","Components/ClassConfigForm/ClassConfigForm.js","WorkAreas/Classes/Classes.js","Utilities/Utility.js","Utilities/ClassUtility.js","Components/ScheduleGrid/ScheduleGrid.js","WorkAreas/ClassSchedule/ClassSchedule.js","WorkAreas/ContactSetup/Interests/Interests.js","WorkAreas/ContactSetup/Sources/Sources.js","WorkAreas/ContactSetup/Statuses/Statuses.js","WorkAreas/ContactSetup/ContactSetup.js","WorkAreas/Mailchimp/ContactManagement/Setup/Lists.js","WorkAreas/Mailchimp/ContactManagement/Setup/Groups.js","WorkAreas/Mailchimp/ContactManagement/Setup/Tags.js","WorkAreas/Mailchimp/ContactManagement/Setup/Segments.js","WorkAreas/Mailchimp/ContactManagement/Setup/Setup.js","WorkAreas/Mailchimp/ContactManagement/Organization/Organization.js","WorkAreas/Mailchimp/ContactManagement/ImportExport.js","WorkAreas/Mailchimp/ContactManagement/ContactManagement.js","Components/NavigationDrawer/NavigationDrawer.js","Components/Content/Content.js","Components/WorkSpace/WorkSpace.js","Components/UnAuthorized/UnAuthorized.js","App.js","Reducers/AppReducer.js","Reducers/ContentReducer.js","Reducers/ContactReducer.js","Reducers/ModalReducer.js","Reducers/FormReducer.js","Reducers/NotificationReducer.js","Reducers/ClassReducer.js","Reducers/AdminReducer.js","Reducers/RootReducer.js","index.js","Styles/Common.module.css","Components/Login/Login.module.css","Components/ScheduleGrid/ScheduleGrid.module.css","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","__webpack_require__","p","base","image","clickable","label","dataRow","addLeadButton","icon","button","itemSelect","baseTablet","basePhone","classSchedule","weekDays","singleDay","times","singleTime","schedule","classButton","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","react_default","a","createElement","AppBar_default","position","Toolbar_default","className","Style","id","this","props","user","title","actions","Component","defaultProps","FormUtility","children","formName","updatedChildren","Array","isArray","map","child","Object","objectSpread","value","name","rules","valid","options","forms","index","i","length","form","childName","Form","newForm","dispatch","type","addNameToChildren","React","connect","Input","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","event","properties","target","onChange","element","createChildFromProps","TextField_default","defaultValue","margin","variant","disabled","autoComplete","InputProps","inputProps","multiline","rowsMax","helperText","placeholder","SelectProps","selectProps","InputLabelProps","inputLabelProps","FloatingButton","handleClick","onClick","Fab_default","size","color","Notification","Dialog_default","open","DialogTitle_default","action","Common","flexColumn","CircularProgress_default","marginHAuto","concat","padding1","message","NotificationActions","notification","component","Components_Notification_Notification","key","moment","milliseconds","Settings","localhost","minDesktopWidth","maxTabletWidth","maxPhoneWidth","classScheduleInterval","classScheduleIntervalCount","classScheduleStart","dayStart","dayMultiple","timeStart","timeMultiple","initialHeight","regularHeight","GymManagementApiService","uri","body","method","headers","Content-Type","Authorization","userToken","JSON","stringify","url","apiUrl","fetch","response","json","getApiUrl","credentials","request","encrypt","JSEncrypt","setPublicKey","encryptedUser","UserName","encryptedPassword","Password","encryptedCredentials","token","jwt_decode","contact","sources","interests","category","types","listId","memberObject","Login","handleLogin","history","route","addNotification","getChildValue","login","result","data","push","_context","t0","removeNotification","_this2","Fragment","react_responsive_default","minDeviceWidth","flexCenter","logo","src","DesktopLogo","alt","Components_Form_Form","margin5","Components_Input_Input","flexEnd","Route","render","_ref","Components_FloatingButton_FloatingButton","maxDeviceWidth","_ref2","width","height","_ref3","withRouter","findFormIndexByName","NavigationArea","style","subArea","ListItem_default","ListItemIcon_default","ListItemText_default","inset","primary","NavigationExpand","expand","setState","navigationItem","ExpandLess_default","ExpandMore_default","collapsePanel","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","Divider_default","Dashboard","Email","StyledTableCell","withStyles","head","backgroundColor","fontSize","TableCell","DataTableRow","columns","column","property","split","propertyMap","1","2","propertyValue","styledHeader","undefined","TableCell_default","cells","createCells","TableRow_default","DataTable","page","handleChangePage","headerRow","Components_DataTableRow_DataTableRow","TableHead_default","rows","row","showFooter","TableBody_default","slice","rowsPerPage","TableFooter_default","TablePagination_default","rowsPerPageOptions","colSpan","count","native","onChangePage","onChangeRowsPerPage","handleChangeRowsPerPage","header","showHeader","createHeader","dataRows","createDataRows","footer","createFooter","Card_default","CardContent_default","Table_default","StyledSelect","selectMenu","minWidth","Select","OutlinedSelect","formChild","findFormChildByName","selectOptions","option","MenuItem_default","FormControl_default","InputLabel_default","input","OutlinedInput_default","labelWidth","ownProps","formIndex","StyledDateTimePicker","root","marginTop","marginBottom","DateTimePicker","DatePicker","date","flexRow","material_ui_pickers_esm","utils","MomentUtils","StyledDialogTitle","padding","DialogTitle","Modal","handleClose","onClose","content","ModalActions","modal","Components_Modal_Modal","hideClose","ContactForm","handleSave","firstName","contactForm","lastName","phone","email","timesContacted","statusForm","notes","generalForm","leadNotes","updatedContact","ContactId","contactId","StatusId","SourceId","sourceId","InterestId","FirstName","LastName","Phone","LastContact","TimesContacted","Created","created","IsDeleted","isDeleted","LeadNotes","nextAppointment","updateContact","contacts","status","Enumerable","from","statuses","where","s","statusId","firstOrDefault","removeModal","sourceRequest","getSources","statusRequest","getStatuses","interestRequest","getInterests","sourceOptions","source","toArray","statusOptions","interestOptions","interest","interestId","_context2","container","contactLabel","flexWrap","flexAround","statusLabel","Components_OutlinedSelect_OutlinedSelect","dateConverted","Components_DatePicker_DatePicker","paddingTop","lastContact","generalLabel","margin1","Save_default","contactIndex","statusIndex","generalIndex","StyledCard","Card","StyledTypography","marginLeft","Typography","ValueSummary","function","clickableStyle","text","MemberInformation","displayName","Components_ContactForm_ContactForm","addModal","members","month","year","member","getContacts","configureColumns","totalMembers","Components_ValueSummary_ValueSummary","People_default","ExposurePlus1_default","calculateMembersThisMonth","Components_DataTable_DataTable","LeadForm","saveLead","leadStatus","appointment","format","newContact","NextAppointment","createContact","getMailchimpLists","listResponse","list","lists","listMember","Interest","Label","Tags","addUserToList","margin2","Typography_default","align","margin3","app","LeadInformation","addLead","getDaysSinceContact","now","diff","users","forEach","Components_LeadForm_LeadForm","leads","totalLeads","Call_default","calculateContactNeeded","caluclateLeadsToday","Add_default","ContainedButton","Button_default","ClassConfigForm","handleCancel","description","onSave","onCancel","width50","Classes","showForm","selectedClass","handleAddClass","selected","classTypes","classType","typeId","updatedType","Category","TypeId","Name","Description","updateTypes","createType","classTypeOptions","getTypesByCategory","Components_ClassConfigForm_ClassConfigForm","Components_ContainedButton_ContainedButton","classes","Utility","b","ClassUtility","time","y","hours","minutes","beginTime","endTime","begin","scheduleList","available","_loop","day","currentSchedules","xPositionMap","takenYPositions","calculateScheduleYPosition","duration","calculateScheduleHeight","sort","sortNumber","hour","substring","minute","numericHour","parseInt","numericMinute","hourOffset","Math","floor","minuteOffset","numericEndHour","endHour","end","start","xPosition","ceil","yPosition","offset","Sunday","0","Monday","Tuesday","Wednesday","3","Thursday","4","Friday","5","Saturday:","6","ScheduleGrid","createLayout","removeItem","classColorMap","krav_maga_1","krav1","krav_maga_2","krav2","krav_maga_3","krav3","fitness_bootcamp","fitness","mitt_work","mittWork","cardio_kickboxing","kickboxing","layout","classSchedules","classTypeId","classScheduleId","x","w","h","maxW","classLabel","deleteClassSchedule","_this3","layoutObject","ref","delete","getClassSchedules","prevProps","refs","classScheduleDivs","createClassSchedules","react_grid_layout_default","classname","cols","rowHeight","maxRows","verticalCompact","ClassSchedule","createClassButtons","addClassToSchedule","currentHour","timeArray","classTime","getFirstAvailableTime","newSchedule","ClassTypeId","Day","BeginTime","EndTime","createClassSchedule","scheduleResult","updatedSchedules","entries","entry","cssText","calculateDay","calculateBegin","calculateDuration","ClassScheduleId","updateClassSchedule","updates","propertY","_context3","createTimes","availableClassButtons","Components_ScheduleGrid_ScheduleGrid","marginLeft5","marginLeftAuto","marginTopAuto","Interests","selectedInterest","handleAdd","updatedInterest","updateInterests","newInterest","createInterests","defaultName","defaultLabel","width45","flexBetween","marginTopSm","admin","Sources","selectedSource","updatedSource","updateSources","t","newSource","createSources","typeRequest","getTypes","typeOptions","defaultType","defaultDescription","Statuses","width100","StyledPaper","flexGrow","Paper","ContactSetup","tab","contentMap","Tabs_default","indicatorColor","textColor","centered","Tab_default","Lists","mailchimp","Groups","filterData","handleListChange","buildTabs","getMailchimpGroups","groupResponse","categories","groups","listOptions","loadLists","tabs","Groups_StyledPaper","getMailchimpSegments","segmentResponse","segments","filter","segment","Tags_StyledPaper","tags","Segments","Segments_StyledPaper","Organization","Paper_default","subheader","ListSubheader_default","Components_NavigationArea_NavigationArea","icons_List_default","Group_default","Label_default","ViewCarousel_default","marginLeftSm","ImportExport","ContactManagmenet","Setup","ContactManagement_StyledPaper","StyledDrawer","paper","top","Drawer","NavigationDrawer","clickedComponent","componentMap","dashboard","DashboardWorkArea","EmailWorkArea","lead","class_schedule","contact_setup","contact_management","ContactManagement","anchor","Dashboard_default","Components_NavigationExpand_NavigationExpand","AccountCircle_default","Schedule_default","Class_default","Build_default","Settings_default","MonetizationOn_default","Business_default","Email_default","TrendingUp_default","Content","WorkSpace","flex","Components_NavigationDrawer_NavigationDrawer","Components_Content_Content","UnAuthorized","marginTop20","App","setApiUrl","startup","modals","notifications","BrowserRouter","Components_Header_Header","Switch","exact","path","AppReducer","arguments","update","$set","defineProperty","ContentReducer","ContactReducer","newState","$push","$splice","$merge","ModalReducer","modalIndex","FormReducer","childIndex","findFormChildIndexByName","NotificationReducer","notificationIndex","ClassReducer","classInstances","AdminReducer","promotions","locations","RootReducer","store","createStore","ReactDOM","es","src_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","marginVAuto","marginBottomSm","width40","width70"],"mappings":"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","file":"static/js/main.62e65d64.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo_Desktop.05f65343.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ValueSummary_base__2vwvt\",\"image\":\"ValueSummary_image__3V01n\",\"clickable\":\"ValueSummary_clickable__2KzLQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"DatePicker_label__Kb7yN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Header_base__1Dupp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"NavigationArea_base__3MnIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"NavigationExpand_base__3K5wE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"DataTableRow_base__1qqzu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"DataTable_base__1opBf\",\"dataRow\":\"DataTable_dataRow__1xwjl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"LeadInformation_base__2stDV\",\"addLeadButton\":\"LeadInformation_addLeadButton__s6cFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ContainedButton_base__1jHxe\",\"icon\":\"ContainedButton_icon__2k9ng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Classes_base__2if2p\",\"button\":\"Classes_button__3ekes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Setup_base__i5Dml\",\"itemSelect\":\"Setup_itemSelect__10ztu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"WorkSpace_base__DCbUb\",\"baseTablet\":\"WorkSpace_baseTablet__1bVrK\",\"basePhone\":\"WorkSpace_basePhone__2RwCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ClassSchedule_base__1xysh\",\"classSchedule\":\"ClassSchedule_classSchedule__phzIR\",\"weekDays\":\"ClassSchedule_weekDays__365ed\",\"singleDay\":\"ClassSchedule_singleDay__3Mbyy\",\"times\":\"ClassSchedule_times__1XJrx\",\"singleTime\":\"ClassSchedule_singleTime__JlX8u\",\"schedule\":\"ClassSchedule_schedule__4OIfu\",\"classButton\":\"ClassSchedule_classButton__104Oy\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Style from './Header.module.css';\r\n\r\nclass Header extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBar position='static'>\r\n                    <Toolbar className={Style.base}>\r\n                        <div id='user'>\r\n                            {this.props.user}\r\n                        </div>\r\n                        <div id='title'>\r\n                            {this.props.title}\r\n                        </div>\r\n                        <div id='actions'>\r\n                            {this.props.actions}\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHeader.defaultProps = {\r\n    user: null,\r\n    title: null,\r\n    actions: null\r\n}\r\n\r\nexport default Header;","class FormUtility {\r\n\r\n    static addNameToChildren(children, formName) {\r\n        \r\n        let updatedChildren = Array.isArray(children)\r\n        ? children.map(child => {\r\n            let props = {\r\n                ...child.props,\r\n                formName: formName,\r\n            };\r\n\r\n            let newChild = {...child, props};\r\n\r\n            return newChild;\r\n        })\r\n        : null;\r\n\r\n        if(updatedChildren === null) {\r\n            let props = { ...children.props, formName: formName }\r\n            updatedChildren = {...children, props};\r\n        }\r\n\r\n        return updatedChildren;\r\n    }\r\n\r\n    static createChildFromProps(props) {\r\n\r\n        let value = props.value\r\n        ? props.value\r\n        : null;\r\n\r\n        return {\r\n            name: props.name,\r\n            formName: props.formName,\r\n            value: value,\r\n            rules: props.rules,\r\n            valid: false,\r\n            options: [],\r\n        }\r\n    }\r\n\r\n    static findFormIndexByName(forms, formName) {\r\n        let index = -1;\r\n        for(let i = 0; i < forms.length; i++) {\r\n            if(forms[i].name === formName) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    static findFormChildIndexByName(form, childName) {\r\n        let index = -1;\r\n        for(let i = 0; i < form.children.length; i++) {\r\n            if(form.children[i].name === childName) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    static findFormChildByName(form, childName) {\r\n        let index = -1;\r\n        for(let i = 0; i < form.children.length; i++) {\r\n            if(form.children[i].name === childName) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return form.children[index];\r\n    }\r\n\r\n    static getChildValue(form, childName) {\r\n        for(let i = 0; i < form.children.length; i++) {\r\n            if(form.children[i].name === childName) {\r\n                return form.children[i].value;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormUtility;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nclass Form extends Component {\r\n    \r\n    componentWillMount() {\r\n\r\n        let newForm = {\r\n            name: this.props.name,\r\n            children: [],\r\n            valid: false\r\n        };\r\n\r\n        this.props.dispatch({\r\n            type: 'ADD_FORM',\r\n            form: newForm\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        let children = FormUtility\r\n            .addNameToChildren(this.props.children, this.props.name);\r\n\r\n        return (\r\n            React.createElement(\r\n                'span',\r\n                this.props,\r\n                children\r\n            )\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        this.props.dispatch({\r\n            type: 'REMOVE_FORM',\r\n            formName: this.props.name\r\n        });\r\n    }\r\n}\r\n\r\n// function mapStateToProps(state) {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\nexport default connect(null, null)(Form);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nclass Input extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        this.props.dispatch({\r\n            type: 'UPDATE_FORM_CHILD',\r\n            formName: this.props.formName,\r\n            childName: this.props.name,\r\n            properties: {\r\n                value: event.target.value\r\n            }\r\n            // value: event.target.value,\r\n        });\r\n\r\n        if(this.props.onChange)\r\n            this.props.onChange(event.target.value);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let element = FormUtility.createChildFromProps(this.props);\r\n\r\n        this.props.dispatch({\r\n            type: 'ADD_CHILD_TO_FORM',\r\n            formName: this.props.formName,\r\n            child: element,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <TextField \r\n                id={this.props.id}\r\n                label={this.props.label}\r\n                className={this.props.className}\r\n                value={this.props.value}\r\n                defaultValue={this.props.defaultValue}\r\n                onChange={this.handleChange}\r\n                margin={this.props.margin}\r\n                variant={this.props.variant}\r\n                error={this.props.error}\r\n                disabled={this.props.disabled}\r\n                autoComplete={this.props.autoComplete}\r\n                InputProps={this.props.inputProps}\r\n                multiline={this.props.multiline}\r\n                rowsMax={this.props.rowsMax}\r\n                helperText={this.props.helperText}\r\n                placeholder={this.props.placeholder}\r\n                SelectProps={this.props.selectProps}\r\n                InputLabelProps={this.props.inputLabelProps}\r\n                type={this.props.type}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nInput.defaultProps = {\r\n    margin: 'normal',\r\n    variant: 'outlined',\r\n    disabled: false,\r\n}\r\n\r\n// function mapStateToProps(state) {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\nexport default connect(null, null)(Input);","import React, { Component } from 'react';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nclass FloatingButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        if(this.props.onClick)\r\n            this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fab \r\n                variant={this.props.variant}\r\n                size={this.props.size}\r\n                color={this.props.color}\r\n                onClick={this.handleClick}\r\n            >\r\n                {this.props.icon}\r\n                {this.props.label}\r\n            </Fab>\r\n        );\r\n    }\r\n}\r\n\r\nFloatingButton.defaultProps = {\r\n    variant: 'extended',\r\n    size: 'medium',\r\n    color: 'primary'\r\n}\r\n\r\nexport default FloatingButton;","import React, { Component } from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass Notification extends Component {\r\n    render() {\r\n        return (\r\n            <Dialog \r\n                open={true}\r\n            >\r\n                <DialogTitle>{this.props.action}</DialogTitle>\r\n                <div className={Common.flexColumn}>\r\n                    <CircularProgress \r\n                        className={Common.marginHAuto}\r\n                        size={50}\r\n                    />\r\n                    <p className={`${Common.marginHAuto} ${Common.padding1}`}>\r\n                        {this.props.message}\r\n                    </p>\r\n                </div>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Notification from 'Components/Notification/Notification';\r\n\r\nclass NotificationActions {\r\n\r\n    static addNotification(action, message, name) {\r\n\r\n        let dispatch = {\r\n            name: name,\r\n            component: \r\n                <Notification\r\n                    key={moment().milliseconds()}\r\n                    action={action}\r\n                    message={message}\r\n                />\r\n        };\r\n\r\n        return {\r\n            type: 'ADD_NOTIFICATION',\r\n            notification: dispatch\r\n        }\r\n\r\n    }\r\n\r\n    static removeNotification(name) {\r\n\r\n        return {\r\n            type: 'REMOVE_NOTIFICATION',\r\n            name: name\r\n        }\r\n    }\r\n}\r\n\r\nexport default NotificationActions;","class Settings {\r\n\r\n    // Media Query sizes\r\n    static minDesktopWidth = 1225;\r\n    static maxTabletWidth = 1224;\r\n    static maxPhoneWidth = 420;\r\n\r\n    // Schedule settings\r\n    static classScheduleInterval = 30; // minutes\r\n    static classScheduleIntervalCount = 30; // intervals per day\r\n    static classScheduleStart = \"05:00\";\r\n    static dayStart = 10; // Sunday starts at 10 px\r\n    static dayMultiple = 133; // 133px between each day\r\n    static timeStart = 10; // 05:00 starts at 10px\r\n    static timeMultiple = 25; // 25 px between every 30 minutes\r\n    static initialHeight = 15; // first \"30 minute\" section of a class\r\n    static regularHeight = 25; // every \"30 minute\" section after first\r\n    \r\n    //\r\n    static getApiUrl() {\r\n\r\n        let urlMap = {\r\n            // .Net Api\r\n            localhost: 'http://localhost:56598/api/'\r\n        }\r\n\r\n        return (urlMap[window.location.hostname]);\r\n    }\r\n}\r\n\r\nexport default Settings;","import Settings from 'Settings';\r\nimport JSEncrypt from 'jsencrypt';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nclass GymManagementApiService {\r\n\r\n    static apiUrl = null;\r\n    static userToken = null;\r\n\r\n    static async request(uri, body, method) {\r\n        \r\n        let headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${GymManagementApiService.userToken}`\r\n        }\r\n\r\n        let options = {\r\n            headers: headers,\r\n            body: method === 'GET' ? null : JSON.stringify(body),\r\n            method: method,\r\n        }\r\n\r\n        let url = `${GymManagementApiService.apiUrl}${uri}`;\r\n\r\n        console.log(\"url / options:\", url, options);\r\n\r\n        let response = await fetch(url, options);\r\n        response = await response.json();\r\n        console.log(\"response:\", response);\r\n        return response;\r\n    }\r\n\r\n    // Setup Methods\r\n\r\n    static setApiUrl() {\r\n        GymManagementApiService.apiUrl = Settings.getApiUrl();\r\n    }\r\n\r\n    static setUserToken() {\r\n\r\n    }\r\n\r\n    // Login/Logout Methods\r\n\r\n    static async login(credentials) {\r\n\r\n        let key = await this.request('Auth/Key', null, 'POST');\r\n\r\n        var encrypt = new JSEncrypt();\r\n        encrypt.setPublicKey(key.key);\r\n        let encryptedUser = encrypt.encrypt(credentials.UserName);\r\n        let encryptedPassword = encrypt.encrypt(credentials.Password);\r\n\r\n        let encryptedCredentials = {\r\n            UserName: encryptedUser,\r\n            Password: encryptedPassword\r\n        };\r\n\r\n        let token = await this.request('Auth/Token', encryptedCredentials, 'POST');\r\n        GymManagementApiService.userToken = token.token;\r\n\r\n        try {\r\n            token = jwt_decode(token.token);\r\n        }\r\n        catch(error) {\r\n            return error;\r\n        }\r\n\r\n        return token;\r\n    }\r\n\r\n    // Contact Methods\r\n\r\n    static async getContacts() {\r\n\r\n        // let filter = ``;\r\n        //return await this.request('GetContacts', null, 'GET');\r\n        return await this.request('Contact', null, 'GET');\r\n    }\r\n\r\n    static async createContact(contact) {\r\n        return await this.request('Contact', contact, 'POST');\r\n    }\r\n\r\n    static async updateContact(contact) {\r\n        return await this.request('Contact', contact, 'PATCH');\r\n    }\r\n\r\n    // Source Methods\r\n\r\n    static async getSources() {\r\n\r\n        // let filter = ``;\r\n        return await this.request('Source', null, 'GET');\r\n    }\r\n\r\n    static async createSources(sources) {\r\n        return await this.request('Source', sources, 'POST');\r\n    }\r\n\r\n    static async updateSources(sources) {\r\n        return await this.request('Source', sources, 'PATCH');\r\n    }\r\n\r\n    // Status Methods\r\n\r\n    static async getStatuses() {\r\n\r\n        // let filter = '';\r\n        return await this.request('Status', null, 'GET');\r\n    }\r\n\r\n    // Interest Methods \r\n    \r\n    static async getInterests() {\r\n\r\n        // let filter = '';\r\n        return await this.request('Interest', null, 'GET');\r\n    }\r\n\r\n    static async createInterests(interests) {\r\n        return await this.request('Interest', interests, 'POST');\r\n    }\r\n\r\n    static async updateInterests(interests) {\r\n        return await this.request('Interest', interests, 'PATCH');\r\n    }\r\n\r\n    // Type Methods\r\n\r\n    static async getTypes() {\r\n        return await this.request('Type', null, 'GET');\r\n    }\r\n\r\n    static async getTypesByCategory(category) {\r\n        return await this.request(`Type/${category}`, null, 'GET');\r\n    }\r\n\r\n    static async createType(type) {\r\n        return await this.request('Type', type, 'POST');\r\n    }\r\n\r\n    static async updateTypes(types) {\r\n        return await this.request('Type', types, 'PATCH');\r\n    }\r\n\r\n    // Class Methods\r\n\r\n    static async getClassInstances() {\r\n        return await this.request('Class', null, 'GET');\r\n    }\r\n\r\n    // Class Schedule Methods\r\n\r\n    static async getClassSchedules() {\r\n        return await this.request('ClassSchedule', null, 'GET');\r\n    }\r\n\r\n    static async createClassSchedule(schedule) {\r\n        return await this.request('ClassSchedule', schedule, 'POST');\r\n    }\r\n\r\n    static async updateClassSchedule(schedule) {\r\n        return await this.request('ClassSchedule', schedule, 'PATCH');\r\n    }\r\n\r\n    static async deleteClassSchedule(id) {\r\n        return await this.request(`ClassSchedule/${id}`, null, 'POST');\r\n    }\r\n\r\n    // Mailchimp Methods\r\n\r\n    static async getMailchimpLists() {\r\n        return await this.request('Mailchimp/List', null, 'GET');\r\n    }\r\n\r\n    static async addUserToList(listId, memberObject) {\r\n        return await this.request(`Mailchimp/List/${listId}/Members`, memberObject, 'POST');\r\n    }\r\n\r\n    static async getMailchimpGroups(listId) {\r\n        return await this.request(`Mailchimp/List/${listId}/Groups`, null, 'GET');\r\n    }\r\n\r\n    static async getMailchimpSegments(listId) {\r\n        return await this.request(`Mailchimp/List/${listId}/Segments`, null, 'GET');\r\n    }\r\n}\r\n\r\nexport default GymManagementApiService;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MediaQuery from 'react-responsive';\r\nimport { Route, withRouter } from 'react-router-dom';\r\n\r\nimport Form from 'Components/Form/Form';\r\nimport Input from 'Components/Input/Input';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport DesktopLogo from 'Images/Logo/Logo_Desktop.png';\r\n\r\n// import ModalActions from 'Actions/ModalActions';\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Settings from 'Settings';\r\n\r\nimport Style from './Login.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    async handleLogin(history, route) {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Logging In',\r\n            'loading_notification'\r\n        ));\r\n        \r\n        try {\r\n\r\n            let credentials = {\r\n                UserName: FormUtility.getChildValue(this.props.form, 'email'),\r\n                Password: FormUtility.getChildValue(this.props.form, 'password')\r\n            }\r\n\r\n            let result = await GymManagementApiService.login(credentials);\r\n            \r\n            // TODO: Load different routes based on authenticated user\r\n            //      Home/Dashboard for admin, Member portal for user\r\n            //      Class login screen for service account\r\n\r\n            if(result) {\r\n                this.props.dispatch({\r\n                    type: 'SET_USER',\r\n                    data: result\r\n                });\r\n                \r\n                history.push(route);\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error: \", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render () {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n\r\n                {/* Desktop Layout */}\r\n                <MediaQuery minDeviceWidth={Settings.minDesktopWidth}>\r\n                    <div id='computerContainer' className={Style.base}>\r\n                        <div id='logo' className={`${Common.flexCenter} ${Style.logo}`}>\r\n                            <img src={DesktopLogo} alt='logo' />\r\n                        </div>\r\n                        <Form name='login_form' className={`${Common.flexColumn} ${Common.margin5}`}>\r\n                            <Input \r\n                                name='email'\r\n                                label='Email'\r\n                            />\r\n                            <Input \r\n                                name='password'\r\n                                label='Password'\r\n                                type='password'\r\n                            />\r\n                        </Form>\r\n                        <div className={`${Common.flexEnd} ${Style.button}`}>\r\n                            <Route render={({history}) => (\r\n                                <FloatingButton\r\n                                    label='Login'\r\n                                    onClick={() => this.handleLogin(history, '/Home')}\r\n                                />\r\n                            )}/>\r\n                        </div>\r\n                    </div>\r\n                </MediaQuery>\r\n\r\n                {/* Tablet Layout */}\r\n                <MediaQuery minDeviceWidth={Settings.maxPhoneWidth + 1} maxDeviceWidth={Settings.maxTabletWidth}>\r\n                    <div id='tabletContainer' className={Style.baseTablet}>\r\n                        <div id='logo' className={`${Common.flexCenter} ${Style.logo}`}>\r\n                            <img src={DesktopLogo} alt='logo' />\r\n                        </div>\r\n                        <Form name='login_form' className={`${Common.flexColumn} ${Common.margin5}`}>\r\n                            <Input \r\n                                label='Email'\r\n                            />\r\n                            <Input \r\n                                label='Password'\r\n                                type='password'\r\n                            />\r\n                        </Form>\r\n                        <div className={`${Common.flexEnd} ${Style.button}`}>\r\n                            <Route render={({history}) => (\r\n                                <FloatingButton\r\n                                    label='Login'\r\n                                    onClick={() => this.handleLogin(history, '/Home')}\r\n                                />\r\n                            )}/>\r\n                        </div>\r\n                    </div>\r\n                </MediaQuery>\r\n\r\n                {/* Phone Layout */}\r\n                <MediaQuery maxDeviceWidth={Settings.maxPhoneWidth}>\r\n                    <div id='phoneContainer' className={Style.basePhone}>\r\n                    <div id='logo' className={`${Common.flexCenter} ${Style.logo}`}>\r\n                            <img src={DesktopLogo} alt='logo' width={200} height={142}/>\r\n                        </div>\r\n                        <Form name='login_form' className={`${Common.flexColumn} ${Common.margin5}`}>\r\n                            <Input \r\n                                label='Email'\r\n                            />\r\n                            <Input \r\n                                label='Password'\r\n                                type='password'\r\n                            />\r\n                        </Form>\r\n                        <div className={`${Common.flexEnd} ${Style.button}`}>\r\n                            <Route render={({history}) => (\r\n                                <FloatingButton\r\n                                    label='Login'\r\n                                    onClick={() => this.handleLogin(history, '/Home')}\r\n                                />\r\n                            )}/>\r\n                        </div>\r\n                    </div>\r\n                </MediaQuery>\r\n            \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    \r\n    let index = FormUtility.findFormIndexByName(state.forms, 'login_form');\r\n\r\n    return {\r\n        form: state.forms[index],\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(Login));","import React, { Component } from 'react';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Style from './NavigationArea.module.css';\r\n\r\nclass NavigationArea extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        if(this.props.onClick)\r\n            this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n\r\n        let style = this.props.subArea\r\n        ? Style.base\r\n        : '';\r\n\r\n        return (\r\n            <div id='container' className={style}>\r\n                <ListItem button onClick={this.handleClick}>\r\n                    <ListItemIcon>\r\n                        {this.props.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText inset primary={this.props.label} />\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNavigationArea.defaultProps = {\r\n    subArea: true,\r\n}\r\n\r\nexport default NavigationArea;","import React, { Component } from 'react';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from'@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport Style from './NavigationExpand.module.css';\r\n\r\nclass NavigationExpand extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        this.state = {\r\n            expand: false\r\n        }    \r\n    }\r\n\r\n    handleClick() {\r\n\r\n        this.setState({\r\n            expand: !this.state.expand\r\n        });\r\n\r\n        if(this.props.onClick)\r\n            this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n        let style = this.props.subArea\r\n        ? Style.base\r\n        : '';\r\n\r\n        let navigationItem = \r\n        <ListItem button onClick={this.handleClick}>\r\n            <ListItemIcon>\r\n                {this.props.icon}\r\n            </ListItemIcon>\r\n            <ListItemText inset primary={this.props.label} />\r\n            {this.state.expand ? <ExpandLess /> : <ExpandMore />}\r\n        </ListItem>;\r\n\r\n        let collapsePanel =\r\n        <Collapse in={this.state.expand} timeout='auto' unmountOnExit>\r\n            <List component='div' disablePadding>\r\n                {this.props.children}\r\n            </List>\r\n        </Collapse>\r\n\r\n        return (\r\n            <div id='container' className={style}>\r\n                {navigationItem}\r\n                <Divider />\r\n                {collapsePanel}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNavigationExpand.defaultProps = {\r\n    subArea: false,\r\n}\r\n\r\nexport default NavigationExpand;","import React, { Component } from 'react';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Dashboard!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\n\r\nclass Email extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Email!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Email;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nimport Style from './DataTableRow.module.css';\r\n\r\nconst StyledTableCell = withStyles({\r\n    head: {\r\n        backgroundColor: '#2087FB',\r\n        color: '#000000',\r\n        fontSize: '18px',\r\n    }\r\n})(TableCell);\r\n\r\nclass DataTableRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick(event) {\r\n        if(this.props.onClick) {\r\n            this.props.onClick(event, this.props.data);\r\n        }\r\n    }\r\n\r\n    createCells() {\r\n\r\n        return this.props.columns.map((column, i) => {\r\n\r\n            let property = column.property\r\n                ? column.property.split('.')\r\n                : null;\r\n\r\n            let propertyMap = this.props.data && property\r\n                ? \r\n                    {\r\n                        1: this.props.data[property[0]],\r\n                        2: this.props.data[property[0]][property[1]]\r\n                    }\r\n                : null;\r\n            \r\n            let propertyValue = property && propertyMap\r\n                ? propertyMap[property.length]\r\n                : null;\r\n\r\n                return this.props.styledHeader\r\n                ? this.props.data !== undefined\r\n                    ? column.method === undefined\r\n                        ? <StyledTableCell key={i}>{propertyValue}</StyledTableCell>\r\n                        : <StyledTableCell key={i}>{column.method(this.props.data)}</StyledTableCell>\r\n                    : <StyledTableCell key={i}>{column.label}</StyledTableCell>\r\n                : this.props.data !== undefined\r\n                    ? column.method === undefined\r\n                        ? <TableCell key={i}>{propertyValue}</TableCell>\r\n                        : <TableCell key={i}>{column.method(this.props.data)}</TableCell>\r\n                    : <TableCell key={i}>{column.label}</TableCell>\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let cells = this.createCells();\r\n\r\n        // TODO: Highlight on hover\r\n        return (\r\n            <TableRow className={Style.base} onClick={this.handleClick}>\r\n                {cells}\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\nDataTableRow.defaultProps = {\r\n    columns: [],//data: [],\r\n}\r\n\r\nexport default DataTableRow;","import React, { Component } from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport DataTableRow from 'Components/DataTableRow/DataTableRow';\r\n\r\nimport Style from './DataTable.module.css';\r\n\r\nclass DataTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            page: 0,\r\n        }\r\n\r\n        this.handleChangePage = this.handleChangePage.bind(this);\r\n    }\r\n\r\n    createHeader() {\r\n\r\n        let headerRow = \r\n            <DataTableRow\r\n                styledHeader={this.props.styledHeader}\r\n                columns={this.props.columns}\r\n            />\r\n\r\n        return (\r\n            <TableHead>\r\n                {headerRow}\r\n            </TableHead>\r\n        );\r\n    }\r\n\r\n    createDataRows() {\r\n\r\n        let rows = this.props.data.map((row, index) => {\r\n            return (\r\n                <DataTableRow\r\n                    key={index}\r\n                    onClick={this.props.onClick}\r\n                    data={row}\r\n                    columns={this.props.columns}\r\n                />\r\n            );\r\n        });\r\n\r\n        if(this.props.showFooter === false)\r\n            return (\r\n                <TableBody>\r\n                    {rows}\r\n                </TableBody>\r\n            )\r\n\r\n        else {\r\n\r\n            return (\r\n                <TableBody>\r\n                    {rows.slice(this.state.page * this.props.rowsPerPage,\r\n                        this.state.page * this.props.rowsPerPage + this.props.rowsPerPage)\r\n                        .map(row => {\r\n                            return row\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            )\r\n        }\r\n    }\r\n\r\n    createFooter() {\r\n        \r\n        return (\r\n            <TableFooter>\r\n                <TableRow>\r\n                    <TablePagination \r\n                        rowsPerPageOptions={this.props.rowsPerPageOptions}\r\n                        colSpan={this.props.columns.length}\r\n                        count={this.props.data.length}\r\n                        rowsPerPage={this.props.rowsPerPage}\r\n                        page={this.state.page}\r\n                        SelectProps={{native: true}}\r\n                        onChangePage={this.handleChangePage}\r\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                    />\r\n                </TableRow>\r\n            </TableFooter>\r\n        )\r\n    }\r\n\r\n    handleChangePage(event, page) {\r\n        this.setState({ page: page });\r\n    }\r\n\r\n    // TODO: Won't work yet, rows per page passed as props\r\n    handleChangeRowsPerPage(event) {\r\n\r\n        this.setState({\r\n            page: 0,\r\n            rowsPerPage: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let header = this.props.showHeader\r\n            ? this.createHeader()\r\n            : null;\r\n\r\n        let dataRows = this.createDataRows();\r\n\r\n        let footer = this.props.showFooter\r\n            ? this.createFooter()\r\n            : null;\r\n\r\n        return (\r\n            <Card className={Style.base}>\r\n                <CardContent>\r\n                    <Table>\r\n                        {header}\r\n                        {dataRows}\r\n                        {footer}\r\n                    </Table>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nDataTable.defaultProps = {\r\n    columns: [],\r\n    data: [],\r\n    showHeader: true,\r\n    showFooter: true,\r\n    rowsPerPageOptions: [10],\r\n    rowsPerPage: 10,\r\n    styledHeader: false,\r\n}\r\n\r\nexport default DataTable;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nconst StyledSelect = withStyles({\r\n    selectMenu: {\r\n        minWidth: '150px',\r\n    }\r\n})(Select);\r\n\r\nclass OutlinedSelect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n\r\n        this.props.dispatch({\r\n            type: 'UPDATE_FORM_CHILD',\r\n            formName: this.props.formName,\r\n            childName: this.props.name,\r\n            properties: {\r\n                value: event.target.value\r\n            }\r\n        });\r\n\r\n        if(this.props.onChange)\r\n            this.props.onChange(event.target.value);\r\n    }\r\n\r\n    componentWillMount() {\r\n        let element = FormUtility.createChildFromProps(this.props);\r\n\r\n        this.props.dispatch({\r\n            type: 'ADD_CHILD_TO_FORM',\r\n            formName: this.props.formName,\r\n            child: element\r\n        });\r\n\r\n        this.props.dispatch({\r\n            type: 'UPDATE_FORM_CHILD',\r\n            formName: this.props.formName,\r\n            childName: this.props.name,\r\n            properties: {\r\n                options: this.props.options\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let formChild = this.props.form\r\n        ? FormUtility.findFormChildByName(this.props.form, this.props.name)\r\n        : null;\r\n\r\n        let availableOptions = formChild\r\n        ? formChild.options\r\n        : [];\r\n\r\n        let selectOptions = availableOptions.map((option, i) => {\r\n            return (\r\n                <MenuItem \r\n                    key={i} \r\n                    value={option.value}\r\n                >\r\n                    {option.label}\r\n                </MenuItem>\r\n            )\r\n        })\r\n        \r\n        let value = formChild\r\n        ? formChild.value\r\n        : '';\r\n\r\n        return (\r\n            <FormControl \r\n                variant={this.props.variant}\r\n                margin={this.props.margin}\r\n            >\r\n                <InputLabel>\r\n                    {this.props.label}\r\n                </InputLabel>\r\n                <StyledSelect \r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    disabled={this.props.disabled}\r\n                    input={\r\n                        <OutlinedInput\r\n                            labelWidth={this.props.labelWidth}\r\n                            name={this.props.name}\r\n                        />\r\n                    }\r\n                >\r\n                    {selectOptions}\r\n                </StyledSelect>\r\n            </FormControl>\r\n        )\r\n    }\r\n}\r\n\r\nOutlinedSelect.defaultProps = {\r\n    options: [],\r\n    variant: 'outlined',\r\n    margin: 'normal',\r\n    labelWidth: 10,\r\n    disabled: false,\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n\r\n    let formIndex = FormUtility.findFormIndexByName(state.forms, ownProps.formName);\r\n\r\n    return {\r\n        form: state.forms[formIndex]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(OutlinedSelect);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\nimport MomentUtils from '@date-io/moment';\r\n\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from 'material-ui-pickers';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\nimport Style from './DatePicker.module.css';\r\n\r\nconst StyledDateTimePicker = withStyles({\r\n    root: {\r\n        marginTop: '3%',\r\n        marginBottom: '3%'\r\n    }\r\n})(DateTimePicker);\r\n\r\nclass DatePicker extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(date) {\r\n\r\n        this.props.dispatch({\r\n            type: 'UPDATE_FORM_CHILD',\r\n            formName: this.props.formName,\r\n            childName: this.props.name,\r\n            properties: {\r\n                value: date\r\n            }\r\n        });\r\n\r\n        if(this.props.onChange)\r\n            this.props.onChange(date);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let element = FormUtility.createChildFromProps(this.props);\r\n\r\n        this.props.dispatch({\r\n            type: 'ADD_CHILD_TO_FORM',\r\n            formName: this.props.formName,\r\n            child: element,\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let value = this.props.form\r\n        ? FormUtility.getChildValue(this.props.form, this.props.name)\r\n        : moment();\r\n\r\n        return (\r\n            <div className={`${Common.flexRow} ${Style.base} ${this.props.className}`}>\r\n                <p className={Style.label}>{this.props.label}</p>\r\n                <MuiPickersUtilsProvider utils={MomentUtils}>\r\n                    <StyledDateTimePicker \r\n                        className={this.props.className}\r\n                        value={value}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nDatePicker.defaultProps = {\r\n    value: moment(),\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n\r\n    let formIndex = FormUtility.findFormIndexByName(state.forms, ownProps.formName);\r\n\r\n    return {\r\n        form: state.forms[formIndex],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(DatePicker);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// TODO: Figure out how to make modal width variable\r\n// TODO: Don't close on click\r\n\r\nconst StyledDialogTitle = withStyles({\r\n    root: {\r\n        padding: '10px',\r\n    }\r\n})(DialogTitle);\r\n\r\nclass Modal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.props.dispatch({\r\n            type: 'REMOVE_MODAL',\r\n            name: this.props.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let title = <StyledDialogTitle>{this.props.title}</StyledDialogTitle>\r\n        \r\n        return (\r\n            <Dialog \r\n                className={this.props.className}\r\n                open={true} \r\n                onClose={this.handleClose}\r\n            >\r\n                {title}\r\n                <div id='content'>\r\n                    {this.props.content}\r\n                </div>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, null)(Modal);","import React from 'react';\r\nimport Modal from 'Components/Modal/Modal';\r\n\r\nclass ModalActions {\r\n    static addModal(modal) {\r\n        let dispatch = {\r\n            name: modal.name,\r\n            component: \r\n                <Modal\r\n                    hideClose={modal.hideClose}\r\n                    name={modal.name}\r\n                    title={modal.title}\r\n                    content={modal.content} \r\n                    className={modal.className}\r\n                />\r\n        };\r\n\r\n        return {\r\n            type: 'ADD_MODAL',\r\n            modal: dispatch\r\n        }\r\n    }\r\n\r\n    static removeModal(name) {\r\n        return {\r\n            type: 'REMOVE_MODAL',\r\n            name: name\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalActions;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Enumerable from 'linq';\r\n\r\nimport Form from 'Components/Form/Form';\r\nimport Input from 'Components/Input/Input';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport DatePicker from 'Components/DatePicker/DatePicker';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\nimport ModalActions from 'Actions/ModalActions';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Save from '@material-ui/icons/Save';\r\nimport Style from './ContactForm.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass ContactForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    async handleSave() {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Saving...',\r\n            'Saving Contacts',\r\n            'contact_saving_notification'\r\n        ));\r\n\r\n        try {\r\n            // Build the new contact\r\n            let firstName = FormUtility.getChildValue(this.props.contactForm, 'firstName')\r\n                ? FormUtility.getChildValue(this.props.contactForm, 'firstName')\r\n                : this.props.contact.firstName;\r\n\r\n            let lastName = FormUtility.getChildValue(this.props.contactForm, 'lastName')\r\n                ? FormUtility.getChildValue(this.props.contactForm, 'lastName')\r\n                : this.props.contact.lastName;\r\n\r\n            let phone = FormUtility.getChildValue(this.props.contactForm, 'phone')\r\n                ? FormUtility.getChildValue(this.props.contactForm, 'phone')\r\n                : this.props.contact.phone;\r\n\r\n            let email = FormUtility.getChildValue(this.props.contactForm, 'email')\r\n                ? FormUtility.getChildValue(this.props.contactForm, 'email')\r\n                : this.props.contact.email;\r\n\r\n            let timesContacted = FormUtility.getChildValue(this.props.statusForm, 'timesContacted')\r\n                ? FormUtility.getChildValue(this.props.statusForm, 'timesContacted')\r\n                : this.props.contact.timesContacted;\r\n\r\n            let notes = FormUtility.getChildValue(this.props.generalForm, 'notes')\r\n                ? FormUtility.getChildValue(this.props.generalForm, 'notes')\r\n                : this.props.contact.leadNotes;\r\n\r\n            let updatedContact = {\r\n                ContactId: this.props.contact.contactId,\r\n                StatusId: FormUtility.getChildValue(this.props.statusForm, 'status'),\r\n                SourceId: this.props.contact.sourceId,\r\n                InterestId: FormUtility.getChildValue(this.props.generalForm, 'interest'),\r\n                FirstName: firstName,\r\n                LastName: lastName,\r\n                Phone: phone,\r\n                Email: email,\r\n                LastContact: FormUtility.getChildValue(this.props.statusForm, 'lastContact'),\r\n                TimesContacted: timesContacted,\r\n                Created: this.props.contact.created,\r\n                IsDeleted: this.props.contact.isDeleted,\r\n                LeadNotes: notes,\r\n                nextAppointment: FormUtility.getChildValue(this.props.statusForm, 'nextAppointment')\r\n            }\r\n\r\n            let result = await GymManagementApiService.updateContact([updatedContact]);\r\n            \r\n            let index = -1\r\n            for(let i = 0; i < this.props.contacts.length; i++) {\r\n                if(this.props.contacts[i].contactId === result[0].contactId) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let status = Enumerable\r\n                .from(this.props.statuses)\r\n                .where(s => s.statusId === result[0].statusId)\r\n                .firstOrDefault();\r\n\r\n            result[0].status = status;\r\n\r\n            // Update state\r\n            this.props.dispatch({\r\n                type: 'MERGE_CONTACT_DATA',\r\n                property: 'contacts',\r\n                index: index,\r\n                data: result[0]\r\n            });\r\n\r\n            // Close modal\r\n            this.props.dispatch(ModalActions.removeModal(this.props.name));\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'contact_saving_notificaiton'));\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Contacts',\r\n            'contact_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let sourceRequest = GymManagementApiService.getSources();\r\n            // TODO: add filter to only retrieve contact statuses\r\n            let statusRequest = GymManagementApiService.getStatuses();\r\n            let interestRequest = GymManagementApiService.getInterests();\r\n\r\n            let sources = await sourceRequest;\r\n            let statuses = await statusRequest;\r\n            let interests = await interestRequest;\r\n\r\n            // !! NOTE: 0 value doesn't seem to work with select, so adding 1 when\r\n            // creating options and subtracting 1 when saving\r\n            let sourceOptions = sources.map(source => {\r\n                return {\r\n                    value: source.sourceId,\r\n                    label: source.label\r\n                }\r\n            });\r\n\r\n            statuses = Enumerable\r\n                .from(statuses)\r\n                .where(status => status.type === 'contact')\r\n                .toArray();\r\n\r\n            let statusOptions = statuses.map(status => {\r\n                return {\r\n                    value: status.statusId,\r\n                    label: status.label\r\n                }\r\n            });\r\n\r\n            let interestOptions = interests.map(interest => {\r\n                return {\r\n                    value: interest.interestId,\r\n                    label: interest.label\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'SET_CONTACT_DATA',\r\n                property: 'status',\r\n                data: statuses\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'status_form',\r\n                childName: 'status',\r\n                properties: {\r\n                    options: statusOptions\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'general_form',\r\n                childName: 'source',\r\n                properties: {\r\n                    options: sourceOptions\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'general_form',\r\n                childName: 'interest',\r\n                properties: {\r\n                    options: interestOptions\r\n                }\r\n            });\r\n        }\r\n        catch(error) {\r\n            // TODO: Error modal\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'contact_loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"contact:\", this.props.contact);\r\n        console.log(this.props.contact.statusId);\r\n        console.log(this.props.contact.sourceId);\r\n\r\n        return (\r\n            <div id='container' className={`${Common.flexColumn}`}>\r\n                <div id='contact_info' className={Style.container}>\r\n                    <p className={Style.contactLabel}>Contact Information</p>\r\n                    <Form name='contact_form' className={`${Common.flexRow} ${Common.flexWrap} ${Common.flexAround}`}>\r\n                        <Input\r\n                            name='firstName'\r\n                            label='First Name'\r\n                            defaultValue={this.props.contact.firstName}\r\n                        />\r\n                        <Input\r\n                            name='lastName'\r\n                            label='Last Name'\r\n                            defaultValue={this.props.contact.lastName}\r\n                        />\r\n                        <Input\r\n                            name='phone'\r\n                            label='Phone'\r\n                            defaultValue={this.props.contact.phone}\r\n                        />\r\n                        <Input\r\n                            name='email'\r\n                            label='Email'\r\n                            defaultValue={this.props.contact.email}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n                <div id='status_info' className={Style.container}>\r\n                    <p className={Style.statusLabel}>Status Information</p>\r\n                    <Form name='status_form' className={`${Common.flexRow} ${Common.flexWrap} ${Common.flexAround}`}>\r\n                        <OutlinedSelect \r\n                            name='status'\r\n                            label='Status'\r\n                            value={this.props.contact.statusId}\r\n                        />\r\n                        <Input\r\n                            name='convertDate'\r\n                            label='Converted'\r\n                            disabled={true}\r\n                            value={this.props.contact.dateConverted ? this.props.dateConverted : 'N/A'}\r\n                        />\r\n                        <DatePicker\r\n                            className={Style.paddingTop}\r\n                            name='lastContact'\r\n                            label='Last Contact'\r\n                            defaultValue={this.props.contact.lastContact}\r\n                        />\r\n                        <Input\r\n                            name='timesContacted'\r\n                            label='Times Contacted'\r\n                            defaultValue={this.props.contact.timesContacted}\r\n                        />\r\n                        <DatePicker\r\n                            name='nextAppointment'\r\n                            label='Next Appointment'\r\n                            defaultValue={this.props.contact.nextAppointment}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n                <div id='general_info' className={Style.container}>\r\n                    <p className={Style.generalLabel}>General Information</p>\r\n                    <Form name='general_form' className={`${Common.flexRow} ${Common.flexWrap} ${Common.flexAround}`}>\r\n                        <OutlinedSelect\r\n                            name='source'\r\n                            label='Source'\r\n                            disabled={true}\r\n                            value={this.props.contact.sourceId}\r\n                        />\r\n                        <OutlinedSelect\r\n                            name='interest'\r\n                            label='Interest'\r\n                            value={this.props.contact.interestId + 1}\r\n                        />\r\n                        <Input\r\n                            name='notes'\r\n                            label='Notes'\r\n                            defaultValue={this.props.contact.leadNotes}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n                <div id='button' className={`${Common.flexCenter} ${Common.margin1}`}>\r\n                    <FloatingButton\r\n                        icon={<Save />}\r\n                        label='Save'\r\n                        onClick={this.handleSave}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    let contactIndex = FormUtility.findFormIndexByName(state.forms, 'contact_form');\r\n    let statusIndex = FormUtility.findFormIndexByName(state.forms, 'status_form');\r\n    let generalIndex = FormUtility.findFormIndexByName(state.forms, 'general_form');\r\n\r\n    return {\r\n        contacts: state.contacts.contacts,\r\n        statuses: state.contacts.status,\r\n        contactForm: state.forms[contactIndex],\r\n        statusForm: state.forms[statusIndex],\r\n        generalForm: state.forms[generalIndex],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ContactForm);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Style from './ValueSummary.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nconst StyledCard = withStyles({\r\n    root: {\r\n        backgroundColor: '#2087FB',\r\n        height: '60px',\r\n    }\r\n})(Card);\r\n\r\nconst StyledTypography = withStyles({\r\n    root: {\r\n        marginTop: '10px',\r\n        marginLeft: '70px'\r\n    }\r\n})(Typography);\r\n\r\nclass ValueSummary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        console.log(\"my data!:\", this.props.data);\r\n    }\r\n\r\n    render() {\r\n\r\n        let value = this.props.value\r\n        ? this.props.value\r\n        : this.props.function(this.props.data);\r\n\r\n        // If value passed, there's no additional data\r\n        // If no value is passed, data and a function were passed and you\r\n        // can drill down\r\n        let clickableStyle = this.props.value\r\n        ? ''\r\n        : value > 0\r\n            ? Style.clickable\r\n            : '';\r\n\r\n        return (\r\n            <Card className={Common.margin1}>\r\n                <CardContent>\r\n                    {/* Image */}\r\n                    <StyledCard className={Style.image}>\r\n                        <CardContent \r\n                            className={clickableStyle}\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            {this.props.icon}\r\n                        </CardContent>\r\n                    </StyledCard>\r\n                    {/* Text */}\r\n                    <StyledTypography className={Style.text} variant='h5' component='h2'>\r\n                        {this.props.title} : {value}\r\n                    </StyledTypography>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nValueSummary.defaultProps = {\r\n    value: null,\r\n    function: () => {return 0},\r\n    data: [],\r\n}\r\n\r\nexport default ValueSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Enumerable from 'linq';\r\n\r\nimport DataTable from 'Components/DataTable/DataTable';\r\nimport ContactForm from 'Components/ContactForm/ContactForm';\r\nimport ValueSummary from 'Components/ValueSummary/ValueSummary';\r\n\r\nimport ModalActions from 'Actions/ModalActions';\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\nimport People from '@material-ui/icons/People';\r\nimport ExposurePlus1 from '@material-ui/icons/ExposurePlus1';\r\n\r\nclass MemberInformation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                method: this.displayName,\r\n            },\r\n            {\r\n                label: 'Phone',\r\n                property: 'phone',\r\n            },\r\n            {\r\n                label: 'Email',\r\n                property: 'email'\r\n            }\r\n        ];\r\n    }\r\n\r\n    displayName(data) {\r\n        return `${data.firstName} ${data.lastName}`;\r\n    }\r\n\r\n    handleClick(event, props) {\r\n        let modal = {\r\n            name: 'edit_contact',\r\n            title: 'Edit Contact',\r\n            content: <ContactForm name='edit_contact' contact={props} />\r\n        }\r\n\r\n        this.props.dispatch(ModalActions.addModal(modal));\r\n    }\r\n\r\n    calculateMembersThisMonth(members) {\r\n        let month = moment().month();\r\n        let year = moment().year();\r\n\r\n        let membersThisMonth = Enumerable\r\n            .from(members)\r\n            .where(member => moment(member.dateConverted).month() === month\r\n                && moment(member.dateConverted).year() === year)\r\n            .toArray();\r\n\r\n        return membersThisMonth.length;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Contacts',\r\n            'contact_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let contacts = await GymManagementApiService.getContacts();\r\n\r\n            this.props.dispatch({\r\n                type: 'SET_LEADS',\r\n                data: contacts\r\n            });\r\n        }\r\n        catch(error) {\r\n\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'contact_loading_notification'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        let members = Enumerable\r\n            .from(this.props.contacts)\r\n            .where(contact => contact.status.name === 'member')\r\n            .toArray();\r\n\r\n        let totalMembers = members.length;\r\n\r\n        return (\r\n            <div id='member_information' className={Common.flexColumn}>\r\n                <div id='member_summaries' className={`${Common.flexRow} ${Common.flexAround}`}>\r\n                    <ValueSummary\r\n                        title='Total Members'\r\n                        icon={<People />}\r\n                        value={totalMembers}\r\n                    />\r\n                    <ValueSummary\r\n                        title='New Members this Month'\r\n                        icon={<ExposurePlus1 />}\r\n                        data={members}\r\n                        function={this.calculateMembersThisMonth}\r\n                    />\r\n                </div>\r\n                <div id='lead_table'>\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={members}\r\n                        onClick={this.handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contacts.contacts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MemberInformation);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Enumerable from 'linq';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Save from '@material-ui/icons/Save';\r\n\r\nimport Form from 'Components/Form/Form';\r\nimport Input from 'Components/Input/Input';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport DatePicker from 'Components/DatePicker/DatePicker';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\nimport ModalActions from 'Actions/ModalActions';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass LeadForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveLead = this.saveLead.bind(this);\r\n    }\r\n\r\n    async saveLead() {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Saving...',\r\n            'Saving Lead Information',\r\n            'save_lead_notification'\r\n        ));\r\n\r\n        try {\r\n\r\n            // Add user to db\r\n            let statuses = await GymManagementApiService.getStatuses();\r\n\r\n            let leadStatus = Enumerable\r\n                .from(statuses)\r\n                .where(status => status.name === 'prospect')\r\n                .firstOrDefault();\r\n    \r\n            let name = FormUtility.getChildValue(this.props.form, 'name');\r\n            name = name.split(' ');\r\n    \r\n            let appointment = moment(FormUtility.getChildValue(this.props.form, 'appointment_date'))\r\n                .format('YYYY-MM-DD HH:mm:ss');\r\n\r\n            let email = FormUtility.getChildValue(this.props.form, 'email');\r\n            let interestId = FormUtility.getChildValue(this.props.form, 'goals');\r\n\r\n            let newContact = {\r\n                StatusId: leadStatus.statusId,\r\n                SourceId: FormUtility.getChildValue(this.props.form, 'source'),\r\n                InterestId: interestId,\r\n                FirstName: name[0],\r\n                LastName: name[1],\r\n                Phone: FormUtility.getChildValue(this.props.form, 'phone'),\r\n                Email: email,\r\n                LastContact: moment().format('YYYY-MM-DD HH:mm:ss'),\r\n                LeadNotes: FormUtility.getChildValue(this.props.form, 'notes'),\r\n                NextAppointment: appointment\r\n            }\r\n    \r\n            let result = await GymManagementApiService.createContact([newContact]);\r\n\r\n            // Add status object to result so name can be displayed\r\n            result[0].status = leadStatus;\r\n\r\n            this.props.dispatch({\r\n                type: 'PUSH_LEAD_DATA',\r\n                property: 'contacts',\r\n                data: result[0]\r\n            });\r\n\r\n            // Add user to mailchimp lists\r\n            if(email !== null && email !== '') {\r\n\r\n                let listResponse = await GymManagementApiService.getMailchimpLists();\r\n\r\n                let list = listResponse.data.lists.firstOrDefault();\r\n\r\n                let interest = Enumerable\r\n                    .from(this.props.interests)\r\n                    .where(i => i.interestId === interestId)\r\n                    .firstOrDefault();\r\n\r\n                let listMember = {\r\n                    Email: email,\r\n                    Interest:  interest.Label,\r\n                    FirstName: name[0],\r\n                    LastName: name[1],\r\n                    Tags: ['Prospect'],\r\n                }\r\n\r\n                await GymManagementApiService.addUserToList(list.id, listMember);\r\n            }\r\n\r\n            this.props.dispatch(ModalActions.removeModal('add_user_modal'));\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error saving contact:\", error)\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'save_lead_notification'));\r\n        }\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Information',\r\n            'lead_info_notification'\r\n        ));\r\n\r\n        try {\r\n            let sourceRequest = GymManagementApiService.getSources();\r\n            let interestRequest = GymManagementApiService.getInterests();\r\n\r\n            let sources = await sourceRequest;\r\n            let interests = await interestRequest;\r\n\r\n            this.props.dispatch({\r\n                type: 'APP_SET_DATA',\r\n                property: 'interests',\r\n                data: interests,\r\n            });\r\n\r\n            let sourceOptions = sources.map(source => {\r\n                return {\r\n                    value: source.sourceId,\r\n                    label: source.label\r\n                }\r\n            });\r\n\r\n            let interestOptions = interests.map(interest => {\r\n                return {\r\n                    value: interest.interestId,\r\n                    label: interest.label\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'lead_form',\r\n                childName: 'source',\r\n                properties: {\r\n                    options: sourceOptions\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'lead_form',\r\n                childName: 'goals',\r\n                properties: {\r\n                    options: interestOptions\r\n                }\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error loading contacts:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'lead_info_notification'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Form name='lead_form' className={`${Common.flexColumn} ${Common.margin2}`}>\r\n                    <Typography variant='body2' align='center'>\r\n                        Hello! Thank you for calling Gym Managment, how may I direct your call?\r\n                    </Typography>\r\n                    <Input \r\n                        name='name'\r\n                        label='Name'\r\n                        placeholder='My name is <name>, who am I speaking with?'\r\n                    />\r\n                    <Input\r\n                        name='phone'\r\n                        label='Phone'\r\n                        placeholder={`What's a good number in case of disconnect?`}\r\n                    />\r\n                    <Input\r\n                        name='email'\r\n                        label='Email'\r\n                        placeholder={`If you'd like, we can send you a special offer`}\r\n                    />\r\n                    <OutlinedSelect\r\n                        name='source'\r\n                        label='Source'\r\n                    />\r\n                    <Typography variant='body2' align='center'>\r\n                        Fantastic! Is this information for you, or somebody else?\r\n                    </Typography>\r\n                    <OutlinedSelect\r\n                        name='goals'\r\n                        label='Goals'\r\n                    />\r\n                    <Typography variant='body2' align='center'>\r\n                        Great! We have facilities specifically designed to...\r\n                    </Typography>\r\n                    <Typography variant='body2' align='center'>\r\n                        Sounds like we should get together and chat (ask for appointment)\r\n                        It's about X-o-clock. Would Y or Z work?\r\n                    </Typography>\r\n                    <DatePicker \r\n                        className={Common.flexCenter}\r\n                        name='appointment_date'\r\n                    />\r\n                    <Typography variant='body2' align='center'>\r\n                        Before I put you on the schedule, is there any reason you \r\n                        wouldn't be able to make it?\r\n                    </Typography>\r\n                    <Input\r\n                        name='notes'\r\n                        label='Notes'\r\n                        placeholder='Enter any notes from the conversation'\r\n                    />\r\n                </Form>\r\n                <div id='button' className={`${Common.flexCenter} ${Common.margin3}`}>\r\n                    <FloatingButton \r\n                        icon={<Save />}\r\n                        label='Save'\r\n                        onClick={this.saveLead}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    let formIndex = FormUtility.findFormIndexByName(state.forms, 'lead_form');\r\n\r\n    return {\r\n        sources: state.app.sources,\r\n        interests: state.app.interests,\r\n        form: state.forms[formIndex],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(LeadForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Enumerable from 'linq';\r\n\r\nimport DataTable from 'Components/DataTable/DataTable';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\nimport ValueSummary from 'Components/ValueSummary/ValueSummary';\r\nimport LeadForm from 'Components/LeadForm/LeadForm';\r\nimport ContactForm from 'Components/ContactForm/ContactForm';\r\n\r\nimport Add from'@material-ui/icons/Add';\r\nimport People from '@material-ui/icons/People';\r\nimport Call from '@material-ui/icons/Call';\r\nimport ExposurePlus1 from '@material-ui/icons/ExposurePlus1';\r\n\r\nimport ModalActions from 'Actions/ModalActions';\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Style from './LeadInformation.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass LeadInformation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addLead = this.addLead.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                method: this.displayName,\r\n            },\r\n            {\r\n                label: 'Phone',\r\n                property: 'phone',\r\n            },\r\n            {\r\n                label: 'Email',\r\n                property: 'email'\r\n            },\r\n            {\r\n                label: 'Days Since Contact',\r\n                method: this.getDaysSinceContact,\r\n            },\r\n            {\r\n                label: 'Times Contacted',\r\n                property: 'timesContacted',\r\n            }\r\n        ];\r\n    }\r\n\r\n    displayName(data) {\r\n        return `${data.firstName} ${data.lastName}`;\r\n    }\r\n\r\n    getDaysSinceContact(data) {\r\n        let now = moment();\r\n        let lastContact = moment(data.lastContact);\r\n        return now.diff(lastContact, 'days');\r\n    }\r\n\r\n    calculateContactNeeded(users) {\r\n        \r\n        let count = 0;\r\n        \r\n        if(users !== undefined) {\r\n            users.forEach(user => {\r\n                if(this.getDaysSinceContact(user) > 3)\r\n                    count++;\r\n            })\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    caluclateLeadsToday(users) {\r\n\r\n        let now = moment().date();\r\n\r\n        let leadsToday = Enumerable\r\n            .from(users)\r\n            .where(user => moment(user.created).date() === now)\r\n            .toArray();\r\n        \r\n        return leadsToday.length;\r\n    }\r\n\r\n    addLead() {\r\n\r\n        let modal = {\r\n            name: 'add_user_modal',\r\n            title: 'Add Lead',\r\n            content: <LeadForm />,\r\n        };\r\n\r\n        this.props.dispatch(ModalActions.addModal(modal));\r\n    }\r\n\r\n    handleClick(event, props) {\r\n        let modal = {\r\n            name: 'edit_contact',\r\n            title: 'Edit Contact',\r\n            content: <ContactForm name='edit_contact' contact={props}/>,\r\n        };\r\n\r\n        this.props.dispatch(ModalActions.addModal(modal));\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Contacts',\r\n            'contact_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let contacts = await GymManagementApiService.getContacts();\r\n\r\n            this.props.dispatch({\r\n                type: 'SET_LEADS',\r\n                data: contacts\r\n            });\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error loading contacts:\", error);\r\n        }\r\n        finally {\r\n\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'contact_loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        let leads = Enumerable\r\n            .from(this.props.contacts)\r\n            .where(contact => contact.status.name === 'prospect')\r\n            .toArray();\r\n\r\n        let totalLeads = leads.length;\r\n\r\n        return (\r\n            <div id='lead_information' className={Common.flexColumn}>\r\n                <div id='lead_summaries' className={`${Common.flexRow} ${Common.flexAround}`}>\r\n                    <ValueSummary \r\n                        title='Total Leads'\r\n                        icon={<People />}\r\n                        value={totalLeads}\r\n                    />\r\n                    <ValueSummary \r\n                        title='Contact Needed'\r\n                        icon={<Call />}\r\n                        data={leads}\r\n                        function={this.calculateContactNeeded.bind(this)}\r\n                    />\r\n                    <ValueSummary \r\n                        title='Leads Today'\r\n                        icon={<ExposurePlus1 />}\r\n                        data={leads}\r\n                        function={this.caluclateLeadsToday}\r\n                    />\r\n                </div>\r\n                <div id='lead_table'>\r\n                    <DataTable \r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={leads}\r\n                        onClick={this.handleClick}\r\n                    />\r\n                </div>\r\n                <div id='add_lead_button' className={Style.addLeadButton}>\r\n                    <FloatingButton\r\n                        icon={<Add />}\r\n                        label='New Lead'\r\n                        onClick={this.addLead}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contacts.contacts,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(LeadInformation);","import React, { Component } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Style from './ContainedButton.module.css';\r\n\r\nclass ContainedButton extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    \r\n    handleClick() {\r\n        if(this.props.onClick)\r\n            this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <Button\r\n                    variant={this.props.variant}\r\n                    color='primary'\r\n                    onClick={this.handleClick}\r\n                >\r\n                    {this.props.label}\r\n                    <div className={Style.icon}>\r\n                        {this.props.icon}\r\n                    </div>\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContainedButton.defaultProps = {\r\n    variant: 'contained',\r\n    color: 'primary',\r\n    icon: null,\r\n}\r\n\r\nexport default ContainedButton;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Form from 'Components/Form/Form';\r\nimport Input from 'Components/Input/Input';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport Save from '@material-ui/icons/Save';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass ClassConfigForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n\r\n    handleSave() {\r\n\r\n        let name = FormUtility.getChildValue(this.props.form, 'name');\r\n        let label = FormUtility.getChildValue(this.props.form, 'label');\r\n        let description = FormUtility.getChildValue(this.props.form, 'desc');\r\n\r\n        if(this.props.onSave)\r\n            this.props.onSave(name, label, description);\r\n    }\r\n\r\n    handleCancel() {\r\n        if(this.props.onCancel)\r\n            this.props.onCancel();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className={Common.width50}>\r\n                <Form name='class_modification_form' className={Common.flexColumn}>\r\n                    <Input \r\n                        name='name'\r\n                        label='Name'\r\n                        defaultValue={this.props.name}\r\n                    />\r\n                    <Input \r\n                        name='label'\r\n                        label='Label'\r\n                        defaultValue={this.props.label}\r\n                    />\r\n                    <Input\r\n                        name='desc'\r\n                        label='Description'\r\n                        defaultValue={this.props.description}\r\n                    />\r\n                </Form>\r\n                <div id='button' className={`${Common.flexCenter} ${Common.flexAround} ${Common.margin3}`}>\r\n                    <FloatingButton\r\n                        label='Cancel'\r\n                        onClick={this.handleCancel}\r\n                        color='secondary'\r\n                    />\r\n                    <FloatingButton\r\n                        icon={<Save />}\r\n                        label='Save'\r\n                        onClick={this.handleSave}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    let index = FormUtility.findFormIndexByName(state.forms, 'class_modification_form');\r\n    \r\n    return {\r\n        form: state.forms[index],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ClassConfigForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Enumerable from 'linq';\r\n\r\nimport Form from 'Components/Form/Form';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport ContainedButton from 'Components/ContainedButton/ContainedButton';\r\nimport ClassConfigForm from 'Components/ClassConfigForm/ClassConfigForm';\r\n\r\nimport Add from '@material-ui/icons/Add';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Style from './Classes.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass Classes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showForm: false,\r\n            selectedClass: null,\r\n            type: null,\r\n        }\r\n\r\n        this.handleAddClass = this.handleAddClass.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n    }\r\n\r\n    handleChange(value) {\r\n\r\n        let selected = Enumerable\r\n            .from(this.props.classTypes)\r\n            .where(classType => classType.typeId === value)\r\n            .firstOrDefault();\r\n\r\n        this.setState({\r\n            showForm: true,\r\n            selectedClass: selected,\r\n            type: 'edit'\r\n        });\r\n    }\r\n\r\n    handleAddClass() {\r\n        this.setState({\r\n            showForm: true,\r\n            type: 'create'\r\n        });\r\n    }\r\n\r\n    async onSave(name, label, description) {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Saving...',\r\n            'Saving Information',\r\n            'class_save_notification'\r\n        ));\r\n        \r\n        try {\r\n            if(this.state.type === 'edit') {\r\n                let updatedType = {\r\n                    Category: this.state.selectedClass.category,\r\n                    Created: this.state.selectedClass.created,\r\n                    IsDeleted: this.state.selectedClass.isDeleted,\r\n                    TypeId: this.state.selectedClass.typeId\r\n                }\r\n    \r\n                updatedType.Name = name !== null\r\n                    ? name\r\n                    : this.state.selectedClass.name;\r\n    \r\n                updatedType.Label = label !== null\r\n                    ? label\r\n                    : this.state.selectedClass.label;\r\n    \r\n                updatedType.Description = description !== null\r\n                    ? description\r\n                    : this.state.selectedClass.description;\r\n    \r\n                let result = await GymManagementApiService.updateTypes([updatedType]);\r\n                \r\n                let index = -1;\r\n                for(let i = 0; i < this.props.classTypes; i++) {\r\n                    if(this.props.classTypes[i].typeId === this.state.selectedClass.typeId) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.props.dispatch({\r\n                    type: 'SPLICE_CLASS_DATA',\r\n                    property: 'classTypes',\r\n                    index: index,\r\n                    data: result[0]\r\n                });\r\n            }\r\n            else {\r\n                let updatedType = {\r\n                    Category: 'class',\r\n                    Name: name,\r\n                    Label: label,\r\n                    Description: description,\r\n                }\r\n    \r\n                let result = await GymManagementApiService.createType([updatedType]);\r\n\r\n                this.props.dispatch({\r\n                    type: 'PUSH_CLASS_DATA',\r\n                    property: 'classTypes',\r\n                    data: result\r\n                });\r\n\r\n                //Update select options\r\n                let classTypeOptions = this.props.classTypes.map(classType => {\r\n                    return {\r\n                        value: classType.typeId,\r\n                        label: classType.label\r\n                    }\r\n                });\r\n    \r\n                this.props.dispatch({\r\n                    type: 'UPDATE_FORM_CHILD',\r\n                    formName: 'class_select_form',\r\n                    childName: 'class',\r\n                    properties: {\r\n                        options: classTypeOptions\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n\r\n            this.setState({\r\n                showForm: false,\r\n                selectedClass: null,\r\n                type: null\r\n            });\r\n\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'class_save_notification'));\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({\r\n            showForm: false,\r\n            selectedClass: null,\r\n            type: null,\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Information',\r\n            'lead_info_notification'\r\n        ));\r\n\r\n        try {\r\n            let classTypes = await GymManagementApiService.getTypesByCategory('class');\r\n\r\n            let classTypeOptions = classTypes.map(classType => {\r\n                return {\r\n                    value: classType.typeId,\r\n                    label: classType.label\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'class_select_form',\r\n                childName: 'class',\r\n                properties: {\r\n                    options: classTypeOptions\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'SET_CLASS_DATA',\r\n                property: 'classTypes',\r\n                data: classTypes\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'lead_info_notification'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let form = this.state.showForm\r\n        ? \r\n        <ClassConfigForm \r\n            onSave={this.onSave}\r\n            onCancel={this.onCancel}\r\n            name={this.state.selectedClass ? this.state.selectedClass.name : ''}\r\n            label={this.state.selectedClass ? this.state.selectedClass.label : ''}\r\n            description={this.state.selectedClass ? this.state.selectedClass.description : ''}\r\n        />\r\n        : null;\r\n        \r\n        return (\r\n            <div id='container'>\r\n                <div id='class_selection' className={Common.flexRow}>\r\n                    <Form name='class_select_form'>\r\n                        <OutlinedSelect\r\n                            name='class'\r\n                            label='Class'\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </Form>\r\n                    <ContainedButton \r\n                        className={Style.button}\r\n                        icon={<Add />}\r\n                        onClick={this.handleAddClass}\r\n                    />\r\n                </div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        classTypes: state.classes.classTypes,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Classes);","class Utility {\r\n    static sortNumber(a, b) {\r\n        return a - b;\r\n    }\r\n}\r\n\r\nexport default Utility;","import moment from 'moment';\r\nimport Enumerable from 'linq';\r\n\r\nimport Utility from 'Utilities/Utility';\r\n\r\nimport Settings from 'Settings';\r\n\r\nclass ClassUtility {\r\n\r\n    static xPositionMap = {\r\n        'Sunday': 0,\r\n        0: 'Sunday',\r\n        'Monday': 1,\r\n        1: 'Monday',\r\n        'Tuesday': 2,\r\n        2: 'Tuesday',\r\n        'Wednesday': 3,\r\n        3: 'Wednesday',\r\n        'Thursday': 4,\r\n        4: 'Thursday',\r\n        'Friday': 5,\r\n        5: 'Friday',\r\n        'Saturday:': 6,\r\n        6: 'Saturday',\r\n    }\r\n\r\n    static calculateScheduleYPosition(time) {\r\n\r\n        // 5:00 = 0, increase 2 for each hour, increase 1 if 30 minutes\r\n        let y = 0;\r\n\r\n        let hours = moment(time).hours();\r\n        let minutes = moment(time).minutes();\r\n\r\n        y = y + ((hours - 5) * 2);\r\n        y = y + (minutes / 30);\r\n\r\n        return y;\r\n    }\r\n\r\n    static calculateScheduleHeight(beginTime, endTime) {\r\n\r\n        // Height increases 1 for every 30 minutes\r\n        let begin = moment(beginTime);\r\n        let end = moment(endTime);\r\n        return (end.diff(begin, 'minutes') / 30);\r\n    }\r\n\r\n    static getFirstAvailableTime(scheduleList) {\r\n        let available = {};\r\n\r\n        // Loop through all available days\r\n        for(let day = 0; day < 7; day++) {\r\n\r\n            // Get all schedules for the current day\r\n            let currentSchedules = Enumerable\r\n                .from(scheduleList)\r\n                .where(schedule => ClassUtility.xPositionMap[schedule.day] === day)\r\n                .toArray();\r\n\r\n            // Get all y positions for the current list of classes\r\n            let takenYPositions = [];\r\n            currentSchedules.forEach(schedule => {\r\n                let position = ClassUtility.calculateScheduleYPosition(schedule.beginTime);\r\n                let duration = ClassUtility.calculateScheduleHeight(schedule.beginTime, schedule.endTime);\r\n\r\n                takenYPositions.push(position);\r\n\r\n                for(let i = 1; i < duration; i++) {\r\n                    position += 1;\r\n                    takenYPositions.push(position);\r\n                }\r\n\r\n            });\r\n\r\n            takenYPositions.sort(Utility.sortNumber);\r\n\r\n            // Iterate through all possible class times and return the first available\r\n            for(let y = 0; y < Settings.classScheduleIntervalCount; y++) {\r\n                if(takenYPositions[y] !== y) {\r\n\r\n                    available.day = ClassUtility.xPositionMap[day];\r\n\r\n                    // 0 = 5:00, add :30 for every 1, 01:00 for every 2\r\n                    let hour = Settings.classScheduleStart.substring(0,2);\r\n                    let minute = Settings.classScheduleStart.substring(3);\r\n\r\n                    let numericHour = parseInt(hour);\r\n                    let numericMinute = parseInt(minute);\r\n\r\n                    let hourOffset = Math.floor(y / 2);\r\n                    for(let i = 0; i < hourOffset; i++) {\r\n                        numericHour += 1;\r\n                    }\r\n\r\n                    let minuteOffset = y % 2;\r\n                    for(let i = 0; i < minuteOffset; i++) {\r\n                        numericMinute = numericMinute === 30\r\n                            ? 0\r\n                            : 30;\r\n                    }\r\n\r\n                    hour = numericHour < 10\r\n                        ? `0${numericHour}`\r\n                        : `${numericHour}`;\r\n\r\n                    let numericEndHour = numericMinute < 10\r\n                        ? numericHour\r\n                        : numericHour + 1;\r\n\r\n                    let endHour = numericEndHour < 10\r\n                        ? `0${numericEndHour}`\r\n                        : `${numericEndHour}`\r\n\r\n                    minute = numericMinute < 10\r\n                        ? `0${numericMinute}`\r\n                        : `${numericMinute}`;\r\n\r\n                    let end = numericMinute < 10\r\n                        ? `${endHour}:30`\r\n                        : `${endHour}:00`\r\n\r\n                    available.start = `${hour}:${minute}`;\r\n                    available.end = end;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(available.day && available.start && available.end);\r\n                break;\r\n        }\r\n\r\n        return available;\r\n    }\r\n\r\n    static calculateDay(xPosition) {\r\n        let day = null;\r\n\r\n        if(xPosition === Settings.dayStart)\r\n            day = 0;\r\n        else\r\n            day = Math.ceil((xPosition - Settings.dayStart) / Settings.dayMultiple);\r\n\r\n        return this.xPositionMap[day];\r\n    }\r\n\r\n    static calculateBegin(yPosition) {\r\n        let offset = null;\r\n\r\n        if(yPosition === Settings.timeStart)\r\n            offset = 0;\r\n        else\r\n            offset = Math.ceil((yPosition - Settings.timeStart) / Settings.timeMultiple);\r\n\r\n        // 0 = 5:00, add :30 for every 1, 01:00 for every 2\r\n        let hour = Settings.classScheduleStart.substring(0,2);\r\n        let minute = Settings.classScheduleStart.substring(3);\r\n\r\n        let numericHour = parseInt(hour);\r\n        let numericMinute = parseInt(minute);\r\n\r\n        let hourOffset = Math.floor(offset / 2);\r\n        for(let i = 0; i < hourOffset; i++) {\r\n            numericHour += 1;\r\n        }\r\n\r\n        let minuteOffset = offset % 2;\r\n        for(let i = 0; i < minuteOffset; i++) {\r\n            numericMinute = numericMinute === 30\r\n                ? 0\r\n                : 30;\r\n        }\r\n\r\n        hour = numericHour < 10\r\n            ? `0${numericHour}`\r\n            : `${numericHour}`;\r\n\r\n        minute = numericMinute < 10\r\n            ? `0${numericMinute}`\r\n            : `${numericMinute}`;\r\n\r\n        return `${hour}:${minute}`;\r\n    }\r\n\r\n    static calculateDuration(height) {\r\n        let duration = null;\r\n\r\n        if(height === Settings.initialHeight)\r\n            duration = 1;\r\n        else\r\n            duration = 1 + Math.ceil((height - Settings.initialHeight) / Settings.regularHeight);\r\n\r\n        return duration;\r\n    }\r\n}\r\n\r\nexport default ClassUtility;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Enumerable from 'linq';\r\n\r\nimport GridLayout from'react-grid-layout';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport ClassUtility from 'Utilities/ClassUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Style from './ScheduleGrid.module.css';\r\nimport '../../../node_modules/react-grid-layout/css/styles.css';\r\nimport '../../../node_modules/react-resizable/css/styles.css';\r\n\r\nclass ScheduleGrid extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.createLayout = this.createLayout.bind(this);\r\n        this.removeItem = this.removeItem.bind(this);\r\n\r\n        this.classColorMap = {\r\n            'krav_maga_1': Style.krav1,\r\n            'krav_maga_2': Style.krav2,\r\n            'krav_maga_3': Style.krav3,\r\n            'fitness_bootcamp': Style.fitness,\r\n            'mitt_work': Style.mittWork,\r\n            'cardio_kickboxing': Style.kickboxing,\r\n        }\r\n    }\r\n\r\n    createLayout() {\r\n        let layout = [];\r\n        \r\n        this.props.classes.classSchedules.forEach(classSchedule => {\r\n\r\n            if(this.props.classes.classTypes.length > 0) {\r\n                let classType = Enumerable\r\n                .from(this.props.classes.classTypes)\r\n                .where(type => type.typeId === classSchedule.classTypeId)\r\n                .firstOrDefault();\r\n\r\n                layout.push({\r\n                    i: `${classSchedule.classScheduleId}`,\r\n                    x: ClassUtility.xPositionMap[classSchedule.day],\r\n                    y: ClassUtility.calculateScheduleYPosition(classSchedule.beginTime),\r\n                    w: 1,\r\n                    h: ClassUtility.calculateScheduleHeight(classSchedule.beginTime, classSchedule.endTime),\r\n                    maxW: 1,\r\n                    // Custom addition for background color and text\r\n                    classType: classType.name,\r\n                    classLabel: classType.label,\r\n                });\r\n            }\r\n        });\r\n\r\n        return layout;\r\n    }\r\n\r\n    async removeItem(id) {\r\n\r\n        id = parseInt(id);\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Deleting Class',\r\n            'class_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let index = -1;\r\n            for(let i = 0; i < this.props.classes.classSchedules.length; i++) {\r\n                if(this.props.classes.classSchedules[i].classScheduleId === id) {\r\n                    console.log(\"Im in\");\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n    \r\n            let response = await GymManagementApiService.deleteClassSchedule(id);\r\n    \r\n            if(response === true) {\r\n                this.props.dispatch({\r\n                    type: 'REMOVE_CLASS_DATA',\r\n                    property: 'classSchedules',\r\n                    index: index,\r\n                });\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'class_loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    createClassSchedules(layout) {\r\n        return layout.map(layoutObject => {\r\n\r\n            return (\r\n                <div \r\n                    id={layoutObject.i}\r\n                    ref={`classSchedule_${layoutObject.i}`}\r\n                    className={this.classColorMap[layoutObject.classType]}\r\n                    key={layoutObject.i}\r\n                >\r\n                    {layoutObject.classLabel}\r\n                    <span\r\n                        className={Style.delete}\r\n                        onClick={() => this.removeItem(layoutObject.i)}\r\n                    >\r\n                        x\r\n                    </span>\r\n                </div>\r\n            )\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Classes',\r\n            'class_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let classSchedules = await GymManagementApiService.getClassSchedules();\r\n\r\n            this.props.dispatch({\r\n                type: 'SET_CLASS_DATA',\r\n                property: 'classSchedules',\r\n                data: classSchedules\r\n            });\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error loading class schedules:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'class_loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.refs.length !== prevProps.classes.classSchedules.length) {\r\n            this.props.dispatch({\r\n                type: 'SET_CLASS_DATA',\r\n                property: 'layout',\r\n                data: this.refs\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let layout = this.createLayout();\r\n        let classScheduleDivs = this.createClassSchedules(layout);\r\n\r\n        return(\r\n            <GridLayout \r\n                classname={Style.base} \r\n                layout={layout}\r\n                cols={7}\r\n                rowHeight={15}\r\n                width={940}\r\n                maxRows={30}\r\n                verticalCompact={false}\r\n            >\r\n                {classScheduleDivs}\r\n            </GridLayout>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        classes: state.classes,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ScheduleGrid);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Enumerable from 'linq';\r\n\r\nimport ContainedButton from 'Components/ContainedButton/ContainedButton';\r\nimport ScheduleGrid from 'Components/ScheduleGrid/ScheduleGrid';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport ClassUtility from 'Utilities/ClassUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Add from '@material-ui/icons/Add';\r\n\r\nimport Style from './ClassSchedule.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass ClassSchedule extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.createClassButtons = this.createClassButtons.bind(this);\r\n        this.addClassToSchedule = this.addClassToSchedule.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    createTimes() {\r\n\r\n        let currentHour = 5;\r\n        let timeArray = [];\r\n\r\n        for(let i = 0; i < 30; i++) {\r\n            // Even rows are 5:30 / 6:30 / 7:30\r\n            if(i % 2 === 0) {\r\n                timeArray.push(\r\n                    <div key={i} className={Style.singleTime}>{`${currentHour}:30`}</div>\r\n                )\r\n                currentHour++;\r\n            }\r\n            // Odd rows are 6 / 7 / 8\r\n            else {\r\n                timeArray.push(\r\n                    <div key={i} className={Style.singleTime}>{`${currentHour}:00`}</div>\r\n                )\r\n            }\r\n        }\r\n        return timeArray;\r\n    }\r\n\r\n    createClassButtons() {\r\n        return this.props.classes.classTypes.map((classType, i) => {\r\n            return (\r\n                <ContainedButton \r\n                    key={i}\r\n                    className={Style.classButton}\r\n                    label={classType.label}\r\n                    icon={<Add />}\r\n                    onClick={this.addClassToSchedule.bind(this, classType.typeId)}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    async addClassToSchedule(classType) {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Creating Classes',\r\n            'class_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let classTime = ClassUtility.getFirstAvailableTime(this.props.classes.classSchedules);\r\n\r\n            // Add a new class schedule\r\n            let newSchedule = {\r\n                ClassTypeId: classType,\r\n                Day: classTime.day,\r\n                BeginTime: classTime.start,\r\n                EndTime: classTime.end,\r\n            }\r\n\r\n            let scheduleResult = await GymManagementApiService.createClassSchedule(newSchedule);\r\n\r\n            // Add result to state so it's displayed on the schedule grid\r\n            this.props.dispatch({\r\n                type: 'PUSH_CLASS_DATA',\r\n                property: 'classSchedules',\r\n                data: [scheduleResult]\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'class_loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    async handleSave() {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Saving Classes',\r\n            'class_saving_notification'\r\n        ));\r\n\r\n        try {\r\n\r\n            let updatedSchedules = [];\r\n\r\n            // Loop through all divs created by ScheduleGrid\r\n            Object.entries(this.props.classes.layout).forEach(entry => {\r\n\r\n                // Get the Id (ClassScheduleId)\r\n                let id = parseInt(entry[1].id);\r\n\r\n                // Get translate(x, y) to determine the time\r\n                // find (xxxpx,) but don't include ( or px,)\r\n                // find px, xxxpx) but don't include px,  or )\r\n                let xRegex = /(?<=\\().+(?=px,)/g\r\n                let yRegex = /(?<=px, ).+(?=px\\))/g\r\n                let x = parseInt(entry[1].style.cssText.match(xRegex));\r\n                let y = parseInt(entry[1].style.cssText.match(yRegex));\r\n                \r\n                // Get the height to determine duration\r\n                let heightRegex = /(?<=height: ).+(?=px;)/g\r\n                let height = parseInt(entry[1].style.cssText.match(heightRegex));\r\n\r\n                // Calculate Day, Hour, and duration\r\n                let day = ClassUtility.calculateDay(x);\r\n                let beginTime = ClassUtility.calculateBegin(y);\r\n                let duration = ClassUtility.calculateDuration(height);\r\n\r\n                let hour = beginTime.substring(0,2);\r\n                let minute = beginTime.substring(3);\r\n\r\n                let numericHour = parseInt(hour);\r\n                let numericMinute = parseInt(minute);\r\n\r\n                for(let i = 0; i < duration; i++) {\r\n                    if(i % 2 === 0) {\r\n                        numericMinute = numericMinute === 30\r\n                            ? 0\r\n                            : 30;\r\n                        \r\n                        numericHour = numericMinute === 0\r\n                            ? numericHour + 1\r\n                            : numericHour;\r\n                    }\r\n                    else {\r\n                        numericMinute = numericMinute === 30\r\n                            ? 0\r\n                            : 30;\r\n\r\n                        numericHour = numericMinute === 0\r\n                            ? numericHour + 1\r\n                            : numericHour;\r\n                    }\r\n                }\r\n\r\n                hour = numericHour < 10\r\n                ? `0${numericHour}`\r\n                : `${numericHour}`;\r\n\r\n                minute = numericMinute < 10\r\n                    ? `0${numericMinute}`\r\n                    : `${numericMinute}`;\r\n\r\n                let endTime = `${hour}:${minute}`;\r\n\r\n                let schedule = Enumerable\r\n                    .from(this.props.classes.classSchedules)\r\n                    .where(schedule => schedule.classScheduleId === id)\r\n                    .firstOrDefault();\r\n\r\n                // TODO: Need to send just the updated info, not recreate the \r\n                // entire object\r\n                \r\n                // Build the schedule object\r\n                let newSchedule = {\r\n                    ClassScheduleId: schedule.classScheduleId,\r\n                    ClassTypeId: schedule.classTypeId,\r\n                    Day: day,\r\n                    BeginTime: beginTime,\r\n                    EndTime: endTime,\r\n                    Created: schedule.created,\r\n                    IsDeleted: schedule.isDeleted,\r\n                }\r\n\r\n                updatedSchedules.push(newSchedule);\r\n            });\r\n            \r\n            // Update the database\r\n            let updates = await GymManagementApiService.updateClassSchedule(updatedSchedules);\r\n\r\n            // Save updates to state\r\n            this.props.dispatch({\r\n                type: 'SET_CLASS_DATA',\r\n                propertY: 'classSchedules',\r\n                data: updates\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'class_saving_notificaiton'));\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Classes',\r\n            'class_loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let classTypes = await GymManagementApiService.getTypesByCategory('class');\r\n\r\n            this.props.dispatch({\r\n                type: 'SET_CLASS_DATA',\r\n                property: 'classTypes',\r\n                data: classTypes\r\n            });\r\n\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error loading classes:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'class_loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let times = this.createTimes();\r\n        let availableClassButtons = this.createClassButtons();\r\n\r\n        return (\r\n            <div id='container' className={Common.flexRow}>\r\n                <div id='class_schedule_grid' className={Style.classSchedule}>\r\n                    <div id='days' className={`${Style.weekDays} ${Common.flexRow}`}>\r\n                        <div className={Style.singleDay}>Sunday</div>\r\n                        <div className={Style.singleDay}>Monday</div>\r\n                        <div className={Style.singleDay}>Tuesday</div>\r\n                        <div className={Style.singleDay}>Wednesday</div>\r\n                        <div className={Style.singleDay}>Thursday</div>\r\n                        <div className={Style.singleDay}>Friday</div>\r\n                        <div className={Style.singleDay}>Saturday</div>\r\n                    </div>\r\n                    <div id='times' className={Style.times}>\r\n                        {times}\r\n                    </div>\r\n                    <div id='schedule' className={Style.schedule}>\r\n                        <ScheduleGrid />\r\n                    </div>\r\n                </div>\r\n                <div id='class_schedule_classes' className={`${Common.flexColumn} ${Common.marginLeft5}`}>\r\n                    {availableClassButtons}\r\n                    <div className={`${Common.marginLeftAuto} ${Common.marginTopAuto}`}>\r\n                        <FloatingButton \r\n                            label='Save Changes'\r\n                            onClick={this.handleSave}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        classes: state.classes,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(ClassSchedule);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport DataTable from 'Components/DataTable/DataTable';\r\nimport Form from 'Components/Form/Form';\r\nimport Input from 'Components/Input/Input';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\nclass Interests extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showForm: false,\r\n            selectedInterest: null,\r\n            type: null,\r\n        }\r\n\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                property: 'name',\r\n            },\r\n            {\r\n                label: 'Label',\r\n                property: 'label'\r\n            }\r\n        ];\r\n    }\r\n\r\n    handleClick(event, props) {\r\n        this.setState({\r\n            showForm: true,\r\n            selectedInterest: props,\r\n            type: 'edit'\r\n        });\r\n    }\r\n\r\n    handleAdd() {\r\n        this.setState({ showForm: true });\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({ \r\n            showForm: false,\r\n            selectedInterest: null,\r\n            type: null\r\n        });\r\n    }\r\n\r\n    async handleSave() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Saving...',\r\n            'Saving Information',\r\n            'saving_notification'\r\n        ));\r\n\r\n        let name = FormUtility.getChildValue(this.props.form, 'name');\r\n        let label = FormUtility.getChildValue(this.props.form, 'label');\r\n\r\n        try {\r\n            if(this.state.type === 'edit') {\r\n                \r\n                let updatedInterest = {\r\n                    InterestId: this.state.selectedInterest.interestId,\r\n                    Name: name,\r\n                    Label: label,\r\n                    Created: this.state.selectedInterest.created,\r\n                    IsDeleted: this.state.selectedInterest.isDeleted,\r\n                }\r\n\r\n                let result = await GymManagementApiService.updateInterests([updatedInterest]);\r\n\r\n                let index = -1;\r\n                for(let i = 0; i < this.props.interests.length; i++){\r\n                    if(this.props.interests[i].interestId === result[0].interestId) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.props.dispatch({\r\n                    type: 'ADMIN_SPLICE_DATA',\r\n                    property: 'contacts.interests',\r\n                    index: index,\r\n                    data: result[0]\r\n                });\r\n\r\n                this.setState({\r\n                    showForm: false,\r\n                    selectedInterest: null,\r\n                    type: null\r\n                });\r\n            }\r\n            else {\r\n                let newInterest = {\r\n                    Name: name,\r\n                    Label: label\r\n                }\r\n\r\n                let result = await GymManagementApiService.createInterests([newInterest]);\r\n\r\n                this.props.dispatch({\r\n                    type: 'ADMIN_PUSH_DATA',\r\n                    property: 'contacts.interests',\r\n                    data: result\r\n                });\r\n\r\n                this.setState({ showForm: false });\r\n            }\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error saving interests:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'saving_notification'));\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Information',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let interests = await GymManagementApiService.getInterests();\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'contacts.interests',\r\n                data: interests,\r\n            });\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error loading contacts:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        let defaultName = this.state.selectedInterest\r\n            ? this.state.selectedInterest.name\r\n            : null;\r\n\r\n        let defaultLabel = this.state.selectedInterest\r\n            ? this.state.selectedInterest.label\r\n            : null;\r\n\r\n        // TODO: name cannot be edited after creation\r\n        let form = this.state.showForm\r\n            ?\r\n                <div id='form' className={Common.width45}>\r\n                    <Form name='interest_form' className={Common.flexColumn}>\r\n                        <Input \r\n                            name='name'\r\n                            label='Name'\r\n                            defaultValue={defaultName}\r\n                        />\r\n                        <Input\r\n                            name='label'\r\n                            label='Label'\r\n                            defaultValue={defaultLabel}\r\n                        />\r\n                    </Form>\r\n                    <div id='form_button' className={`${Common.flexCenter} ${Common.flexAround} ${Common.margin3}`}>\r\n                        <FloatingButton\r\n                            label='Cancel'\r\n                            color='secondary'\r\n                            onClick={this.handleCancel}\r\n                        />\r\n                        <FloatingButton\r\n                            label='Save'\r\n                            icon={<Save />}\r\n                            onClick={this.handleSave}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            : null;\r\n\r\n        return (\r\n            <div id='container' className={`${Common.flexRow} ${Common.flexBetween} ${Common.marginTopSm}`}>\r\n                <div id='table' className={`${Common.width45} ${Common.flexColumn}`}>\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={this.props.interests}\r\n                        onClick={this.handleClick}\r\n                    />\r\n                    <div id='table_button' className={`${Common.margin3} ${Common.marginLeftAuto}`}>\r\n                        <FloatingButton  \r\n                            label='Add'\r\n                            icon={<Add />}\r\n                            onClick={this.handleAdd}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    let index = FormUtility.findFormIndexByName(state.forms, 'interest_form');\r\n\r\n    return {\r\n        interests: state.admin.contacts.interests,\r\n        form: state.forms[index],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Interests);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Enumerable from 'linq';\r\n\r\nimport DataTable from 'Components/DataTable/DataTable';\r\nimport Form from 'Components/Form/Form';\r\nimport Input from 'Components/Input/Input';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\nimport Add from '@material-ui/icons/Add';\r\nimport Save from '@material-ui/icons/Save';\r\n\r\nclass Sources extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showForm: false,\r\n            selectedSource: null,\r\n            type: null,\r\n        }\r\n\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Type',\r\n                property: 'type.name',\r\n            },\r\n            {\r\n                label: 'Label',\r\n                property: 'label',\r\n            },\r\n            {\r\n                label: 'Description',\r\n                property: 'description',\r\n            }\r\n        ];\r\n    }\r\n\r\n    handleClick(event, props) {\r\n        this.setState({\r\n            showForm: true,\r\n            selectedSource: props,\r\n            type: 'edit'\r\n        });\r\n    }\r\n\r\n    handleAdd() {\r\n        this.setState({ showForm: true });\r\n    }\r\n\r\n    handleCancel() {\r\n        this.setState({\r\n            showForm: false,\r\n            selectedSource: null,\r\n            type: null\r\n        });\r\n    }\r\n\r\n    async handleSave() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Saving...',\r\n            'Saving Information',\r\n            'saving_notification'\r\n        ));\r\n\r\n        let typeId = FormUtility.getChildValue(this.props.form, 'type')\r\n            ? FormUtility.getChildValue(this.props.form, 'type')\r\n            : this.state.selectedSource.typeId;\r\n\r\n        let name = FormUtility.getChildValue(this.props.form, 'name')\r\n            ? FormUtility.getChildValue(this.props.form, 'name')\r\n            : this.state.selectedSource.name;\r\n\r\n        let label = FormUtility.getChildValue(this.props.form, 'label')\r\n            ? FormUtility.getChildValue(this.props.form, 'label')\r\n            : this.state.selectedSource.label;\r\n\r\n        let description = FormUtility.getChildValue(this.props.form, 'description')\r\n            ? FormUtility.getChildValue(this.props.form, 'description')\r\n            : this.state.selectedSource.description;\r\n\r\n        try {\r\n            if(this.state.type === 'edit') {\r\n                let updatedSource = {\r\n                    SourceId: this.state.selectedSource.sourceId,\r\n                    TypeId: typeId,\r\n                    Name: name,\r\n                    Label: label,\r\n                    Description: description,\r\n                    Created: this.state.selectedSource.created,\r\n                    IsDeleted: this.state.selectedSource.isDeleted\r\n                }\r\n\r\n                let result = await GymManagementApiService.updateSources([updatedSource]);\r\n\r\n                let index = -1;\r\n                for(let i = 0; i < this.props.sources.length; i++) {\r\n                    if(this.props.sources[i].sourceId === result[0].sourceId) {\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let type = Enumerable\r\n                    .from(this.props.types)\r\n                    .where(t => t.typeId === result[0].typeId)\r\n                    .firstOrDefault();\r\n\r\n                result[0].type = type;\r\n\r\n                this.props.dispatch({\r\n                    type: 'ADMIN_SPLICE_DATA',\r\n                    property: 'contacts.sources',\r\n                    index: index,\r\n                    data: result[0]\r\n                });\r\n\r\n                this.setState({\r\n                    showForm: false,\r\n                    selectedSource: null,\r\n                    type: null\r\n                });\r\n            }\r\n            else {\r\n                let newSource = {\r\n                    TypeId: typeId,\r\n                    Name: name,\r\n                    Label: label,\r\n                    Description: description\r\n                }\r\n\r\n                let result = await GymManagementApiService.createSources([newSource]);\r\n\r\n                console.log(\"result:\", result);\r\n\r\n                this.props.dispatch({\r\n                    type: 'ADMIN_PUSH_DATA',\r\n                    property: 'contacts.sources',\r\n                    data: result\r\n                });\r\n\r\n                this.setState({ showForm: false });\r\n            }\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'saving_notification'));\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Information',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let sourceRequest = GymManagementApiService.getSources();\r\n            let typeRequest = GymManagementApiService.getTypes();\r\n            \r\n            let sources = await sourceRequest;\r\n            let types = await typeRequest;\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'contacts.sources',\r\n                data: sources,\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'types',\r\n                data: types,\r\n            });\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error loading contacts:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        let sourceTypes = Enumerable\r\n            .from(this.props.types)\r\n            .where(type => type.category === 'source')\r\n            .toArray();\r\n\r\n        let typeOptions = sourceTypes.map(type => {\r\n            return {\r\n                label: type.label,\r\n                value: type.typeId\r\n            }\r\n        });\r\n\r\n        let defaultType = this.state.selectedSource\r\n            ? this.state.selectedSource.typeId\r\n            : null;\r\n\r\n        let defaultName = this.state.selectedSource\r\n            ? this.state.selectedSource.name\r\n            : null;\r\n\r\n        let defaultLabel = this.state.selectedSource\r\n            ? this.state.selectedSource.label\r\n            : null;\r\n\r\n        let defaultDescription = this.state.selectedSource\r\n            ? this.state.selectedSource.description\r\n            : null;\r\n\r\n        let form = this.state.showForm\r\n            ?\r\n                <div id='form' className={Common.width45}>\r\n                    <Form name='source_form' className={Common.flexColumn}>\r\n                        <OutlinedSelect\r\n                            name='type'\r\n                            label='Type'\r\n                            options={typeOptions}\r\n                            value={defaultType}\r\n                        />\r\n                        <Input \r\n                            name='name'\r\n                            label='Name'\r\n                            defaultValue={defaultName}\r\n                        />\r\n                        <Input\r\n                            name='label'\r\n                            label='Label'\r\n                            defaultValue={defaultLabel}\r\n                        />\r\n                        <Input\r\n                            name='description'\r\n                            label='Description'\r\n                            defaultValue={defaultDescription}\r\n                        />\r\n                    </Form>\r\n                    <div id='form_button' className={`${Common.flexCenter} ${Common.flexAround} ${Common.margin3}`}>\r\n                        <FloatingButton\r\n                            label='Cancel'\r\n                            color='secondary'\r\n                            onClick={this.handleCancel}\r\n                        />\r\n                        <FloatingButton\r\n                            label='Save'\r\n                            icon={<Save />}\r\n                            onClick={this.handleSave}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            : null;\r\n\r\n        return (\r\n            <div id='container' className={`${Common.flexRow} ${Common.flexBetween} ${Common.marginTopSm}`}>\r\n                <div id='table' className={`${Common.width45} ${Common.flexColumn}`}>\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={this.props.sources}\r\n                        onClick={this.handleClick}\r\n                    />\r\n                    <div id='table_button' className={`${Common.margin3} ${Common.marginLeftAuto}`}>\r\n                        <FloatingButton  \r\n                            label='Add'\r\n                            icon={<Add />}\r\n                            onClick={this.handleAdd}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    let index = FormUtility.findFormIndexByName(state.forms, 'source_form');\r\n\r\n    return {\r\n        sources: state.admin.contacts.sources,\r\n        types: state.admin.types,\r\n        form: state.forms[index],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Sources);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport DataTable from 'Components/DataTable/DataTable';\r\n// import Form from 'Components/Form/Form';\r\n// import Input from 'Components/Input/Input';\r\n// import FloatingButton from 'Components/FloatingButton/FloatingButton';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass Statuses extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.state = {\r\n    //         showForm: false,\r\n    //         selectedStatus: null,\r\n    //         type: null,\r\n    //     }\r\n\r\n    //     this.handleAdd = this.handleAdd.bind(this);\r\n    //     this.handleCancel = this.handleCancel.bind(this);\r\n    //     this.handleSave = this.handleSave.bind(this);\r\n    // }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Type',\r\n                property: 'type',\r\n            },\r\n            {\r\n                label: 'Label',\r\n                property: 'label',\r\n            },\r\n            {\r\n                label: 'Description',\r\n                property: 'description',\r\n            }\r\n        ];\r\n    }\r\n\r\n    // handleClick(event, props) {\r\n    //     this.setState({\r\n    //         showForm: true,\r\n    //         selectedStatus: props,\r\n    //         type: 'edit'\r\n    //     });\r\n    // }\r\n\r\n    // handleAdd() {\r\n    //     this.setState({ showForm: true });\r\n    // }\r\n\r\n    // handleCancel() {\r\n    //     this.setState({\r\n    //         showForm: false,\r\n    //         selectedStatus: null,\r\n    //         type: null\r\n    //     });\r\n    // }\r\n\r\n    // async handleSave() {\r\n    //     this.props.dispatch(NotificationActions.addNotification(\r\n    //         'Saving...',\r\n    //         'Saving Information',\r\n    //         'saving_notification'\r\n    //     ));\r\n\r\n    //     let type = FormUtility.getChildValue(this.props.form, 'type')\r\n    //     let name = FormUtility.getChildValue(this.props.form, 'name');\r\n    //     let label = FormUtility.getChildValue(this.props.form, 'label');\r\n    //     let description = FormUtility.getChildValue(this.props.form, 'description');\r\n\r\n    //     try {\r\n    //         if(this.state.type === 'edit') {\r\n                \r\n    //         }\r\n    //         else {\r\n\r\n    //         }\r\n    //     }\r\n    //     catch(error) {\r\n    //         // TODO: Error Modal\r\n    //         console.log(\"Error saving interests:\", error);\r\n    //     }\r\n    //     finally {\r\n    //         this.props.dispatch(NotificationActions.removeNotification(\r\n    //             'saving_notification'));\r\n    //     }\r\n    // }\r\n\r\n    async componentDidMount() {\r\n\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Information',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let statuses = await GymManagementApiService.getStatuses();\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'contacts.statuses',\r\n                data: statuses,\r\n            });\r\n        }\r\n        catch(error) {\r\n            // TODO: Error Modal\r\n            console.log(\"Error loading contacts:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        // TODO: name cannot be edited after creation\r\n        // let form = this.state.showForm\r\n        //     ?\r\n        //         <div id='form' className={Common.width45}>\r\n        //             <Form name='interest_form' className={Common.flexColumn}>\r\n        //                 <Input \r\n        //                     name='type'\r\n        //                     label='Type'\r\n        //                 />\r\n        //                 <Input\r\n        //                     name='name'\r\n        //                     label='Name'\r\n        //                 />\r\n        //                 <Input\r\n        //                     name='label'\r\n        //                     label='Label'\r\n        //                 />\r\n        //                 <Input\r\n        //                     name='description'\r\n        //                     label='Description'\r\n        //                 />\r\n        //             </Form>\r\n        //             <div id='form_button' className={`${Common.flexCenter} ${Common.flexAround} ${Common.margin3}`}>\r\n        //                 <FloatingButton\r\n        //                     label='Cancel'\r\n        //                     color='secondary'\r\n        //                     onClick={this.handleCancel}\r\n        //                 />\r\n        //                 <FloatingButton\r\n        //                     label='Save'\r\n        //                     onClick={this.handleSave}\r\n        //                 />\r\n        //             </div>\r\n        //         </div>\r\n        //     : null;\r\n\r\n        return (\r\n            <div id='container' className={`${Common.flexRow} ${Common.flexBetween} ${Common.marginTopSm}`}>\r\n                <div id='table' className={`${Common.flexColumn} ${Common.width100}`}>\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={this.props.statuses}\r\n                        onClick={this.handleClick}\r\n                    />\r\n                    {/* <div id='table_button' className={`${Common.margin3} ${Common.marginLeftAuto}`}>\r\n                        <FloatingButton  \r\n                            label='Add'\r\n                            onClick={this.handleAdd}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {form} */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\r\n    let index = FormUtility.findFormIndexByName(state.forms, 'status_form');\r\n\r\n    return {\r\n        statuses: state.admin.contacts.statuses,\r\n        form: state.forms[index],\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Statuses);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Interests from 'WorkAreas/ContactSetup/Interests/Interests';\r\nimport Sources from 'WorkAreas/ContactSetup/Sources/Sources';\r\nimport Statuses from 'WorkAreas/ContactSetup/Statuses/Statuses';\r\n\r\nconst StyledPaper = withStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n})(Paper);\r\n\r\nclass ContactSetup extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // TODO: Move to redux, create component reducer\r\n        this.state = {\r\n            tab: 0\r\n        }\r\n\r\n        this.contentMap = {\r\n            0: Interests,\r\n            1: Sources,\r\n            2: Statuses,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, value) {\r\n        this.setState({\r\n            tab: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let content = React.createElement(this.contentMap[this.state.tab]);\r\n        \r\n        return (\r\n            <div id='container'>\r\n                <StyledPaper>\r\n                    <Tabs\r\n                        value={this.state.tab}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor='primary'\r\n                        textColor='primary'\r\n                        centered\r\n                    >\r\n                        <Tab label='Interests'/>\r\n                        <Tab label='Sources'/>\r\n                        <Tab label='Statuses'/>\r\n                    </Tabs>\r\n                </StyledPaper>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactSetup;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport DataTable from 'Components/DataTable/DataTable';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nclass Lists extends Component {\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                property: 'name',\r\n            },\r\n            {\r\n                label: 'Created',\r\n                property: 'date_created',\r\n            },\r\n            {\r\n                label: 'Members',\r\n                property: 'stats.member_count'\r\n            }\r\n        ];\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Information',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let response = await GymManagementApiService.getMailchimpLists();\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'mailchimp.lists',\r\n                data: response.data.lists\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error loading lists:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notificaiton'));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch({\r\n            type: 'ADMIN_SET_DATA',\r\n            property: 'mailchimp.lists',\r\n            data: []\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        return (\r\n            <div id='container'>\r\n                <DataTable\r\n                    styledHeader={true}\r\n                    columns={columns}\r\n                    data={this.props.lists}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        lists: state.admin.mailchimp.lists,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Lists);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Form from 'Components/Form/Form';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport DataTable from 'Components/DataTable/DataTable';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nconst StyledPaper = withStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n})(Paper);\r\n\r\nclass Groups extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tab: 0,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.filterData = this.filterData.bind(this);\r\n        this.handleListChange = this.handleListChange.bind(this);\r\n        this.buildTabs = this.buildTabs.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                property: 'name'\r\n            },\r\n            {\r\n                label: 'Members',\r\n                property: 'subscriber_count'\r\n            }\r\n        ];\r\n    }\r\n\r\n    async handleListChange(value) {\r\n        \r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Lists',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n\r\n            this.setState({ tab: 0 });\r\n\r\n            let groupResponse = await GymManagementApiService.getMailchimpGroups(value);\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'mailchimp.groups',\r\n                data: groupResponse.categories\r\n            });\r\n\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n\r\n    filterData() {\r\n        let groups = this.props.groups[this.state.tab];\r\n\r\n        return groups !== null && groups !== undefined\r\n            ? groups.interests\r\n            : [];\r\n    }\r\n\r\n    handleChange(event, value) {\r\n        this.setState({ tab: value });\r\n    }\r\n\r\n    async loadLists() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Lists',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let response = await GymManagementApiService.getMailchimpLists();\r\n\r\n            let listOptions = response.data.lists.map(list => {\r\n                return {\r\n                    value: list.id,\r\n                    label: list.name\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'group_list_select_form',\r\n                childName: 'list',\r\n                properties: {\r\n                    options: listOptions\r\n                }\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadLists();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch({\r\n            type: 'ADMIN_SET_DATA',\r\n            property: 'mailchimp.groups',\r\n            data: []\r\n        });\r\n    }\r\n\r\n    buildTabs() {\r\n        \r\n        let tabs = this.props.groups.length > 0\r\n        ? \r\n            this.props.groups.map((category, index) => {\r\n                return <Tab key={index} label={category.title} />\r\n            })\r\n        : null;\r\n\r\n        let tabContainer = \r\n            <Tabs\r\n                value={this.state.tab}\r\n                onChange={this.handleChange}\r\n                indicatorColor='primary'\r\n                textColor='primary'\r\n                centered\r\n            >\r\n                {tabs}\r\n            </Tabs>\r\n\r\n        return tabContainer;\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        let tabs = this.buildTabs();\r\n\r\n        let data = this.filterData();\r\n\r\n        return (\r\n            <div id='container'>\r\n                <StyledPaper>\r\n                    <div id='list_select' className={`${Common.flexCenter}`}>\r\n                        <Form name='group_list_select_form'>\r\n                            <OutlinedSelect\r\n                                name='list'\r\n                                label='List'\r\n                                onChange={this.handleListChange}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                    {tabs}\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={data}\r\n                    />\r\n                </StyledPaper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        groups: state.admin.mailchimp.groups,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Groups);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Form from 'Components/Form/Form';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport DataTable from 'Components/DataTable/DataTable';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nconst StyledPaper = withStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n})(Paper);\r\n\r\nclass Tags extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleListChange = this.handleListChange.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                property: 'name',\r\n            },\r\n            {\r\n                label: 'Created',\r\n                property: 'created_at',\r\n            },\r\n            {\r\n                label: 'Members',\r\n                property: 'member_count',\r\n            }\r\n        ];\r\n    }\r\n\r\n    async loadLists() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Lists',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let response = await GymManagementApiService.getMailchimpLists();\r\n\r\n            let listOptions = response.data.lists.map(list => {\r\n                return {\r\n                    value: list.id,\r\n                    label: list.name\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'tag_list_select_form',\r\n                childName: 'list',\r\n                properties: {\r\n                    options: listOptions\r\n                }\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n\r\n    async handleListChange(value) {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Segments',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let segmentResponse = await GymManagementApiService.getMailchimpSegments(value);\r\n\r\n            let segments = segmentResponse.data.segments.filter(segment => segment.type === 'static');\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'mailchimp.tags',\r\n                data: segments,\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadLists();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch({\r\n            type: 'ADMIN_SET_DATA',\r\n            property: 'mailchimp.tags',\r\n            data: [],\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        return (\r\n            <div id='container'>\r\n                <StyledPaper>\r\n                    <div id='list_select' className={`${Common.flexCenter}`}>\r\n                        <Form name='tag_list_select_form'>\r\n                            <OutlinedSelect\r\n                                name='list'\r\n                                label='List'\r\n                                onChange={this.handleListChange}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={this.props.tags}\r\n                    />\r\n                </StyledPaper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        tags: state.admin.mailchimp.tags,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Tags);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Form from 'Components/Form/Form';\r\nimport OutlinedSelect from 'Components/OutlinedSelect/OutlinedSelect';\r\nimport DataTable from 'Components/DataTable/DataTable';\r\n\r\nimport NotificationActions from 'Actions/NotificationActions';\r\n\r\nimport GymManagementApiService from 'Services/GymManagementApiService';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nconst StyledPaper = withStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n})(Paper);\r\n\r\nclass Segments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleListChange = this.handleListChange.bind(this);\r\n    }\r\n\r\n    configureColumns() {\r\n        return [\r\n            {\r\n                label: 'Name',\r\n                property: 'name',\r\n            },\r\n            {\r\n                label: 'Created',\r\n                property: 'created_at',\r\n            },\r\n            {\r\n                label: 'Members',\r\n                property: 'member_count',\r\n            }\r\n        ];\r\n    }\r\n\r\n    async loadLists() {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Lists',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let response = await GymManagementApiService.getMailchimpLists();\r\n\r\n            let listOptions = response.data.lists.map(list => {\r\n                return {\r\n                    value: list.id,\r\n                    label: list.name\r\n                }\r\n            });\r\n\r\n            this.props.dispatch({\r\n                type: 'UPDATE_FORM_CHILD',\r\n                formName: 'segment_list_select_form',\r\n                childName: 'list',\r\n                properties: {\r\n                    options: listOptions\r\n                }\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n\r\n    async handleListChange(value) {\r\n        this.props.dispatch(NotificationActions.addNotification(\r\n            'Loading...',\r\n            'Loading Segments',\r\n            'loading_notification'\r\n        ));\r\n\r\n        try {\r\n            let segmentResponse = await GymManagementApiService.getMailchimpSegments(value);\r\n\r\n            let segments = segmentResponse.data.segments.filter(segment => segment.type === 'saved');\r\n\r\n            this.props.dispatch({\r\n                type: 'ADMIN_SET_DATA',\r\n                property: 'mailchimp.segments',\r\n                data: segments,\r\n            });\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error:\", error);\r\n        }\r\n        finally {\r\n            this.props.dispatch(NotificationActions.removeNotification(\r\n                'loading_notification'));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadLists();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.dispatch({\r\n            type: 'ADMIN_SET_DATA',\r\n            property: 'mailchimp.segments',\r\n            data: [],\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let columns = this.configureColumns();\r\n\r\n        return (\r\n            <div id='container'>\r\n                <StyledPaper>\r\n                    <div id='list_select' className={`${Common.flexCenter}`}>\r\n                        <Form name='segment_list_select_form'>\r\n                            <OutlinedSelect\r\n                                name='list'\r\n                                label='List'\r\n                                onChange={this.handleListChange}\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                    <DataTable\r\n                        styledHeader={true}\r\n                        columns={columns}\r\n                        data={this.props.segments}\r\n                    />\r\n                </StyledPaper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        segments: state.admin.mailchimp.segments,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Segments);","import React, { Component } from 'react';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubHeader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport NavigationArea from 'Components/NavigationArea/NavigationArea';\r\n\r\nimport Lists from 'WorkAreas/Mailchimp/ContactManagement/Setup/Lists';\r\nimport Groups from 'WorkAreas/Mailchimp/ContactManagement/Setup/Groups';\r\nimport Tags from 'WorkAreas/Mailchimp/ContactManagement/Setup/Tags';\r\nimport Segments from 'WorkAreas/Mailchimp/ContactManagement/Setup/Segments';\r\n\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport Group from '@material-ui/icons/Group';\r\nimport Label from '@material-ui/icons/Label';\r\nimport ViewCarousel from '@material-ui/icons/ViewCarousel';\r\nimport Style from './Setup.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass Organization extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            content: null,\r\n        }\r\n\r\n        this.contentMap = {\r\n            'lists': Lists,\r\n            'groups': Groups,\r\n            'tags': Tags,\r\n            'segments': Segments,\r\n        }\r\n    }\r\n\r\n    // List - Get a list of all lists\r\n\r\n    // Groups - Get a list of all lists, then for each list, get the\r\n    // a list of all interest categories (displayed as tabs), \r\n    // then for all interest categories, get a list of all interests\r\n    // (in table under tab )\r\n\r\n    // Segments/tags - get a list of segments, filter by type\r\n\r\n    // List - /lists\r\n\t// Name - name\r\n\t// Created - date_created\r\n\t// Member Count - stats.member_count\r\n\r\n    // Groups - /lists/{list_id}/interest-categories\r\n    //     title\r\n\r\n    //     Group Names - /lists/{list_id}/interest-categories/{interest_category_id}/interests\r\n    //         Name - name\r\n    //         Subscriber Count - subscriber_count\r\n\r\n    // Segments - /lists/{list_id}/segments (type saved)\r\n    //     Name - name\r\n    //     Created - created_ad\r\n    //     Member Count - member_count\r\n        \r\n\r\n    // Tags - /lists/{list_id}/segments (type static)\r\n    //     Name - name\r\n    //     Created - created_at\r\n    //     Member Count - member_count\r\n    \r\n    render() {\r\n\r\n        let content = this.state.content\r\n            ? React.createElement(this.contentMap[this.state.content])\r\n            : null;\r\n\r\n        return (\r\n            <div id='container' className={`${Common.flexRow} ${Common.marginTopSm}`}>\r\n                <div id='item_select' className={`${Style.itemSelect}`}>\r\n                    <Paper>\r\n                        <List\r\n                            component='nav'\r\n                            subheader={<ListSubHeader component='div'>Items</ListSubHeader>}\r\n                        >\r\n                            <Divider />\r\n                            <NavigationArea\r\n                                onClick={() => {this.setState({ content: 'lists'} )}}\r\n                                icon={<ListIcon />}\r\n                                label='Lists'\r\n                                subArea={false}\r\n                            />\r\n                            <Divider />\r\n                            <NavigationArea\r\n                                onClick={() => {this.setState({ content: 'groups'} )}}\r\n                                icon={<Group />}\r\n                                label='Groups'\r\n                                subArea={false}\r\n                            />\r\n                            <Divider />\r\n                            <NavigationArea\r\n                                onClick={() => {this.setState({ content: 'tags'} )}}\r\n                                icon={<Label />}\r\n                                label='Tags'\r\n                                subArea={false}\r\n                            />\r\n                            <Divider />\r\n                            <NavigationArea\r\n                                onClick={() => {this.setState({ content: 'segments'} )}}\r\n                                icon={<ViewCarousel />}\r\n                                label='Segments'\r\n                                subArea={false}\r\n                            />\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n                <div id='content' className={`${Common.marginLeftSm} ${Common.width100}`}>\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Organization;","import React, { Component } from 'react';\r\n\r\nclass Organization extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Organization\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Organization;","import React, { Component } from 'react';\r\n\r\nclass ImportExport extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                import/export\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImportExport;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Setup from 'WorkAreas/Mailchimp/ContactManagement/Setup/Setup';\r\nimport Organization from 'WorkAreas/Mailchimp/ContactManagement/Organization/Organization';\r\nimport ImportExport from 'WorkAreas/Mailchimp/ContactManagement/ImportExport';\r\n\r\nconst StyledPaper = withStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    }\r\n})(Paper);\r\n\r\nclass ContactManagmenet extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tab: 0\r\n        }\r\n\r\n        this.contentMap = {\r\n            0: Setup,\r\n            1: Organization,\r\n            2: ImportExport,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(event, value) {\r\n        this.setState({ tab: value });\r\n    }\r\n\r\n    render() {\r\n\r\n        let content = React.createElement(this.contentMap[this.state.tab]);\r\n\r\n        return (\r\n            <div id='container'>\r\n                <StyledPaper>\r\n                    <Tabs\r\n                        value={this.state.tab}\r\n                        onChange={this.handleChange}\r\n                        indicatorColor='primary'\r\n                        textColor='primary'\r\n                        centered\r\n                    >\r\n                        <Tab label='Setup' />\r\n                        <Tab label='Organization' />\r\n                        <Tab label='Import / Export' />\r\n                    </Tabs>\r\n                </StyledPaper>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactManagmenet;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubHeader from '@material-ui/core/ListSubheader';\r\n\r\nimport NavigationArea from 'Components/NavigationArea/NavigationArea';\r\nimport NavigationExpand from 'Components/NavigationExpand/NavigationExpand';\r\n\r\n// Collapse Panel Icons\r\nimport Dashboard from '@material-ui/icons/Dashboard';\r\nimport People from '@material-ui/icons/People';\r\nimport Build from '@material-ui/icons/Build';\r\n\r\n// Area Icons\r\nimport Email from '@material-ui/icons/Email';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Schedule from '@material-ui/icons/Schedule';\r\nimport Class from '@material-ui/icons/Class';\r\nimport Settings from '@material-ui/icons/Settings';\r\nimport MonetizationOn from '@material-ui/icons/MonetizationOn';\r\nimport Business from '@material-ui/icons/Business';\r\nimport TrendingUp from '@material-ui/icons/TrendingUp';\r\n\r\n// Work Areas\r\nimport DashboardWorkArea from 'WorkAreas/Dashboard/Dashboard';\r\nimport EmailWorkArea from 'WorkAreas/Email/Email';\r\nimport MemberInformation from 'WorkAreas/MemberInformation/MemberInformation';\r\nimport LeadInformation from 'WorkAreas/LeadInformation/LeadInformation';\r\nimport Classes from 'WorkAreas/Classes/Classes';\r\nimport ClassSchedule from 'WorkAreas/ClassSchedule/ClassSchedule';\r\nimport ContactSetup from 'WorkAreas/ContactSetup/ContactSetup';\r\nimport ContactManagement from 'WorkAreas/Mailchimp/ContactManagement/ContactManagement';\r\n\r\nconst StyledDrawer = withStyles({\r\n    paper: {\r\n        top: '64px',\r\n        width: '250px',\r\n        backgroundColor: '#BBBBBB'\r\n    }\r\n})(Drawer);\r\n\r\nclass NavigationDrawer extends Component {\r\n\r\n    handleClick(clickedComponent) {\r\n        let componentMap = {\r\n            dashboard: DashboardWorkArea,\r\n            email: EmailWorkArea,\r\n            member: MemberInformation,\r\n            lead: LeadInformation,\r\n            classes: Classes,\r\n            class_schedule: ClassSchedule,\r\n            contact_setup: ContactSetup,\r\n            contact_management: ContactManagement,\r\n        };\r\n\r\n        this.props.dispatch({\r\n            type: 'SET_CONTENT',\r\n            component: componentMap[clickedComponent]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledDrawer \r\n                variant='permanent'\r\n                anchor='left'\r\n            >\r\n                <List\r\n                    component='nav'\r\n                    subheader={<ListSubHeader component='div'>Work Areas</ListSubHeader>}\r\n                >\r\n                    <Divider />\r\n\r\n                    <NavigationArea\r\n                        onClick={this.handleClick.bind(this, 'dashboard')}\r\n                        icon={<Dashboard />}\r\n                        label='Dashboard'\r\n                        subArea={false}\r\n                    />\r\n\r\n                    <Divider />\r\n\r\n                    <NavigationExpand\r\n                        icon={<People />}\r\n                        label='Contacts'\r\n                    >\r\n                        <NavigationArea\r\n                            onClick={this.handleClick.bind(this, 'lead')}\r\n                            icon={<AccountCircle />}\r\n                            label='Leads'\r\n                        />\r\n                        <NavigationArea\r\n                            onClick={this.handleClick.bind(this, 'member')}\r\n                            icon={<AccountCircle />}\r\n                            label='Members'\r\n                        />\r\n                    </NavigationExpand>\r\n\r\n                    <Divider />\r\n\r\n                    <NavigationExpand\r\n                        icon={<Schedule />}\r\n                        label='Schedule'\r\n                    >\r\n                        <NavigationArea\r\n                            onClick={this.handleClick.bind(this, 'classes')}\r\n                            icon={<Class />}\r\n                            label='Classes'\r\n                        />\r\n                        <NavigationArea\r\n                            onClick={this.handleClick.bind(this, 'class_schedule')}\r\n                            icon={<Schedule />}\r\n                            label='Class Schedule'\r\n                        />\r\n                    </NavigationExpand>\r\n\r\n                    <Divider />\r\n\r\n                    <NavigationExpand\r\n                        icon={<Build />}\r\n                        label='Admin'\r\n                    >\r\n                        <NavigationExpand\r\n                            icon={<Settings />}\r\n                            label='Setup'\r\n                            subArea={true}\r\n                        >\r\n                            <NavigationArea\r\n                                onClick={this.handleClick.bind(this, 'contact_setup')}\r\n                                icon={<People />}\r\n                                label='Contact'\r\n                            />\r\n\r\n                            <NavigationArea\r\n                                onClick={this.handleClick.bind(this, 'email')}\r\n                                icon={<MonetizationOn />}\r\n                                label='Promotions'\r\n                            />\r\n                            <NavigationArea\r\n                                onClick={this.handleClick.bind(this, 'email')}\r\n                                icon={<Business />}\r\n                                label='Locations'\r\n                            />\r\n\r\n                        </NavigationExpand>\r\n\r\n                        <Divider />\r\n\r\n                        <NavigationExpand\r\n                            icon={<Email />}\r\n                            label='Mailchimp'\r\n                            subArea={true}\r\n                        >\r\n                            <NavigationArea\r\n                                onClick={this.handleClick.bind(this, 'contact_management')}\r\n                                icon={<People />}\r\n                                label='Contact Management'\r\n                            />\r\n                            <NavigationArea\r\n                                onClick={this.handleClick.bind(this, 'email')}\r\n                                icon={<TrendingUp />}\r\n                                label='Reports'\r\n                            />\r\n                        </NavigationExpand>\r\n\r\n                    </NavigationExpand>\r\n\r\n                    <Divider />\r\n\r\n                </List>\r\n            </StyledDrawer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, null)(NavigationDrawer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Content extends Component {\r\n    \r\n    render() {\r\n        let content = this.props.content\r\n        ? React.createElement(this.props.content)\r\n        : null;\r\n\r\n        return (\r\n            <div id='content' className={this.props.className}>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        content: state.content\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Content);","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import MediaQuery from 'react-responsive';\r\n\r\nimport NavigationDrawer from 'Components/NavigationDrawer/NavigationDrawer';\r\nimport Content from 'Components/Content/Content';\r\n\r\nimport Style from './WorkSpace.module.css';\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass WorkSpace extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id='workspace' className={Common.flex}>\r\n                <NavigationDrawer />\r\n                <Content className={Style.base}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorkSpace;","import React, { Component } from 'react';\r\n\r\nimport Common from 'Styles/Common.module.css';\r\n\r\nclass UnAuthorized extends Component {\r\n    render() {\r\n        return (\r\n            <div className={`${Common.flexRow} ${Common.flexCenter} ${Common.marginTop20}`}>\r\n                <p><strong>You Shall Not Pass!</strong></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UnAuthorized;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Header from 'Components/Header/Header';\nimport Login from 'Components/Login/Login';\nimport WorkSpace from 'Components/WorkSpace/WorkSpace';\nimport UnAuthorized from 'Components/UnAuthorized/UnAuthorized';\n\nimport GymManagementApiService from 'Services/GymManagementApiService';\n\nclass App extends Component {\n\n    startup() {\n        GymManagementApiService.setApiUrl();\n    }\n\n    componentDidMount() {\n        this.startup();\n    }\n\n\n    render() {\n\n        let modals = this.props.modals.map(modal => {\n            return modal.component\n        });\n\n        let notifications = this.props.notifications.map(notification => {\n            return notification.component\n        });\n\n        return (\n            <div className=\"App\">\n                <BrowserRouter >\n                    <div>\n                        <Header\n                            //user={this.props.user}\n                            title='Gym Management'\n                        />\n                        <Switch>\n                            <Route exact path='/' component={Login} />\n                            <Route path='/Home' \n                                component={this.props.user\n                                    ? WorkSpace\n                                    : UnAuthorized\n                                } />\n                        </Switch>\n                        {modals}\n                        {notifications}\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.app.user,\n        modals: state.modals,\n        notifications: state.notifications,\n    }\n}\n\nexport default connect(mapStateToProps, null)(App);\n","import update from 'immutability-helper';\r\n\r\nconst defaultState = () => {\r\n    return {\r\n        user: null,\r\n        sources: null,\r\n        interests: null,\r\n    }\r\n}\r\n\r\nconst AppReducer = (app = defaultState(), action) => {\r\n    \r\n    switch(action.type) {\r\n    \r\n        case 'SET_USER': {\r\n            let newState = update(app, {\r\n                user: {\r\n                    $set: action.data\r\n                }\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'APP_SET_DATA': {\r\n            \r\n            let newState = update(app, {\r\n                [action.property]: {\r\n                    $set: action.data\r\n                }\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        default: {\r\n            return app;\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppReducer;","import update from 'immutability-helper';\r\n\r\nimport Dashboard from 'WorkAreas/Dashboard/Dashboard';\r\n\r\nconst defaultState = () => {\r\n    return Dashboard\r\n}\r\n\r\nconst ContentReducer = (content = defaultState(), action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'SET_CONTENT':\r\n\r\n            let newState = update(content, {\r\n                $set: action.component\r\n            });\r\n\r\n            return newState;\r\n        \r\n        default:\r\n            return content;\r\n    }\r\n}\r\n\r\nexport default ContentReducer;","import update from 'immutability-helper';\r\n\r\nconst defaultState = () => {\r\n    return {\r\n        contacts: [],\r\n        status: [],\r\n    }\r\n}\r\n\r\nconst ContactReducer = (contacts =  defaultState(), action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'SET_LEADS': {\r\n\r\n            let newState = update(contacts, {\r\n                contacts: {\r\n                    $set: action.data\r\n                }\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'SET_CONTACT_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(contacts, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(contacts, {\r\n                    [property[0]]: {\r\n                        $set: action.data\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'PUSH_LEAD_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(contacts, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(contacts, {\r\n                    [property[0]]: {\r\n                        $push: [action.data]\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'REPLACE_CONTACT_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(contacts, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(contacts, {\r\n                    [property[0]]: {\r\n                        $splice: [[action.index, 1, action.data]]\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'MERGE_CONTACT_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(contacts, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(contacts, {\r\n                    [property[0]]: {\r\n                        [action.index]: {\r\n                            $merge: action.data\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return contacts;\r\n    }\r\n}\r\n\r\nexport default ContactReducer;","import update from 'immutability-helper';\r\n\r\nconst defaultState = () => {\r\n    return [];\r\n}\r\n\r\nconst ModalReducer = (modals = defaultState(), action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'ADD_MODAL': {\r\n            let newState = update(modals, {\r\n                $push: [action.modal]\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'REMOVE_MODAL': {\r\n            \r\n            let modalIndex = -1;\r\n            for(let i = 0; i < modals.length; i++) {\r\n                if(modals[i].name === action.name) {\r\n                    modalIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let newState = update(modals, {\r\n                $splice: [[modalIndex, 1]]\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return modals;\r\n    }\r\n}\r\n\r\nexport default ModalReducer;","import update from 'immutability-helper';\r\n\r\nimport FormUtility from 'Utilities/FormUtility';\r\n\r\nconst FormReducer = (forms = [], action) => {\r\n\r\n    let formIndex = FormUtility.findFormIndexByName(forms, action.formName);\r\n\r\n    switch(action.type) {\r\n\r\n        case 'ADD_FORM': {\r\n\r\n            let newState = update(forms, {\r\n                $push: [action.form]\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'ADD_CHILD_TO_FORM': {\r\n\r\n            let newState = update(forms, {\r\n                [formIndex]: {\r\n                    children: {\r\n                        $push: [action.child]\r\n                    }\r\n                }\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'UPDATE_FORM_CHILD': {\r\n\r\n            let childIndex = FormUtility\r\n                .findFormChildIndexByName(forms[formIndex], action.childName);\r\n\r\n            let newState = update(forms, {\r\n                [formIndex]: {\r\n                    children: {\r\n                        [childIndex]: {\r\n                            $merge: action.properties\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'REMOVE_FORM': {\r\n            \r\n            let newState = update(forms, {\r\n                $splice: [[[formIndex], 1]]\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return forms;\r\n    }\r\n}\r\n\r\nexport default FormReducer;","import update from 'immutability-helper';\r\n\r\nconst NotificationReducer= (notifications = [], action) => {\r\n\r\n    switch(action.type) {\r\n        case 'ADD_NOTIFICATION': {\r\n            let newState = update(notifications, {\r\n                $push: [action.notification]\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'REMOVE_NOTIFICATION': {\r\n\r\n            let notificationIndex = -1;\r\n            for(let i = 0; i < notifications.length; i++) {\r\n                if(notifications[i].name === action.name) {\r\n                    notificationIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            let newState = update(notifications, {\r\n                $splice: [[notificationIndex, 1]]\r\n            })\r\n\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return notifications;\r\n    }\r\n}\r\n\r\nexport default NotificationReducer;","import update from 'immutability-helper';\r\n\r\nconst defaultState = () => {\r\n    return {\r\n        classTypes: [],\r\n        classInstances: [],\r\n        classSchedules: [],\r\n        layout: null,\r\n    }\r\n}\r\n\r\nconst ClassReducer = (classes = defaultState(), action) => {\r\n    \r\n    switch(action.type) {\r\n        case 'SET_CLASS_DATA': {\r\n\r\n            let property = action.property.split('.');\r\n            let newState = update(classes, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(classes, {\r\n                    [property[0]]: {\r\n                        $set: action.data\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'PUSH_CLASS_DATA': {\r\n\r\n            let property = action.property.split('.');\r\n            let newState = update(classes, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(classes, {\r\n                    [property[0]]: {\r\n                        $push: action.data\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'REMOVE_CLASS_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(classes, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(classes, {\r\n                    [property[0]]: {\r\n                        $splice: [[action.index, 1]]\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'SPLICE_CLASS_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(classes, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(classes, {\r\n                    [property[0]]: {\r\n                        $splice: [[action.index, 1, action.data]]\r\n                    }\r\n                })\r\n            }\r\n\r\n            return newState\r\n        }\r\n\r\n        default: \r\n            return classes;\r\n    }\r\n}\r\n\r\nexport default ClassReducer;","import update from 'immutability-helper';\r\n\r\nconst defaultState = () => {\r\n    return {\r\n        contacts: {\r\n            interests: [],\r\n            sources: [],\r\n            statuses: [],\r\n        },\r\n        promotions: [],\r\n        locations: [],\r\n        types: [],\r\n        mailchimp: {\r\n            lists: [],\r\n            groups: [],\r\n            tags: [],\r\n            segments: [],\r\n        }\r\n    }\r\n}\r\n\r\nconst AdminReducer = (admin = defaultState(), action) => {\r\n\r\n    switch(action.type) {\r\n        case 'ADMIN_SET_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(admin, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(admin, {\r\n                    [property[0]]: {\r\n                        $set: action.data\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(property.length === 2) {\r\n                newState = update(admin, {\r\n                    [property[0]]: {\r\n                        [property[1]]: {\r\n                            $set: action.data\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'ADMIN_PUSH_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(admin, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(admin, {\r\n                    [property[0]]: {\r\n                        $push: action.data\r\n                    }\r\n                });\r\n            }\r\n\r\n            if(property.length === 2) {\r\n                newState = update(admin, {\r\n                    [property[0]]: {\r\n                        [property[1]]: {\r\n                            $push: action.data\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n        case 'ADMIN_SPLICE_DATA': {\r\n            let property = action.property.split('.');\r\n            let newState = update(admin, {});\r\n\r\n            if(property.length === 1) {\r\n                newState = update(admin, {\r\n                    [property[0]]: {\r\n                        $splice: [[action.index, 1, action.data]]\r\n                    }\r\n                })\r\n            }\r\n\r\n            if(property.length === 2) {\r\n                newState = update(admin, {\r\n                    [property[0]]: {\r\n                        [property[1]]: {\r\n                            $splice: [[action.index, 1, action.data]]\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            return newState;\r\n        }\r\n\r\n\r\n        default: \r\n            return admin;\r\n    }\r\n}\r\n\r\nexport default AdminReducer;","import AppReducer from 'Reducers/AppReducer';\r\nimport ContentReducer from 'Reducers/ContentReducer';\r\nimport ContactReducer from 'Reducers/ContactReducer';\r\nimport ModalReducer from 'Reducers/ModalReducer';\r\nimport FormReducer from 'Reducers/FormReducer';\r\nimport NotificationReducer from 'Reducers/NotificationReducer';\r\nimport ClassReducer from 'Reducers/ClassReducer';\r\nimport AdminReducer from 'Reducers/AdminReducer';\r\n\r\nconst RootReducer = (state = 0, action) => {\r\n    let newState = {\r\n        app: AppReducer(state.app, action),\r\n        content: ContentReducer(state.content, action),\r\n        contacts: ContactReducer(state.contacts, action),\r\n        modals: ModalReducer(state.modals, action),\r\n        forms: FormReducer(state.forms, action),\r\n        notifications: NotificationReducer(state.notifications, action),\r\n        classes: ClassReducer(state.classes, action),\r\n        admin: AdminReducer(state.admin, action),\r\n    }\r\n\r\n    console.log(action);\r\n    console.log(newState);\r\n\r\n    return newState;\r\n}\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport RootReducer from 'Reducers/RootReducer';\n\nimport './index.css';\n\nconst store = createStore(RootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexColumn\":\"Common_flexColumn__7HYeZ\",\"flexRow\":\"Common_flexRow__32pDP\",\"flexCenter\":\"Common_flexCenter__2igxF\",\"flexBetween\":\"Common_flexBetween__6Gyjj\",\"flexAround\":\"Common_flexAround__2dQ0o\",\"flexEnd\":\"Common_flexEnd__a_adA\",\"flexWrap\":\"Common_flexWrap__2eTDe\",\"margin1\":\"Common_margin1__1tNZ9\",\"margin2\":\"Common_margin2__oVzNs\",\"margin3\":\"Common_margin3__3fvpg\",\"margin5\":\"Common_margin5__XBzar\",\"marginLeft5\":\"Common_marginLeft5__1EAab\",\"marginLeftSm\":\"Common_marginLeftSm__3CTZl\",\"marginLeftAuto\":\"Common_marginLeftAuto__s3IRO\",\"marginTopAuto\":\"Common_marginTopAuto__23iiB\",\"marginTop20\":\"Common_marginTop20__3fX8S\",\"marginTopSm\":\"Common_marginTopSm__vlvfY\",\"marginHAuto\":\"Common_marginHAuto__UFIxk\",\"marginVAuto\":\"Common_marginVAuto__3wDgN\",\"marginBottomSm\":\"Common_marginBottomSm__3JzVb\",\"padding1\":\"Common_padding1__2l4C9\",\"width40\":\"Common_width40__3MRZ6\",\"width45\":\"Common_width45__11UzH\",\"width50\":\"Common_width50__HKWec\",\"width70\":\"Common_width70__1foqW\",\"width100\":\"Common_width100__WtZtf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Login_base__334eA\",\"baseTablet\":\"Login_baseTablet__29V0x\",\"basePhone\":\"Login_basePhone__3mM5a\",\"button\":\"Login_button__3Slc7\",\"logo\":\"Login_logo__1Ky7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ScheduleGrid_base__2RuK-\",\"krav1\":\"ScheduleGrid_krav1__2eJfI\",\"krav2\":\"ScheduleGrid_krav2__KKBHH\",\"krav3\":\"ScheduleGrid_krav3__1p9L8\",\"fitness\":\"ScheduleGrid_fitness__3EG__\",\"kickboxing\":\"ScheduleGrid_kickboxing__1juk_\",\"mittWork\":\"ScheduleGrid_mittWork__26ORC\",\"delete\":\"ScheduleGrid_delete__25phA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"ContactForm_base__1xI4E\",\"container\":\"ContactForm_container__GuLIg\",\"contactLabel\":\"ContactForm_contactLabel__2_nNo\",\"statusLabel\":\"ContactForm_statusLabel__1sbhk\",\"generalLabel\":\"ContactForm_generalLabel__2hkD1\",\"paddingTop\":\"ContactForm_paddingTop__1gVSh\"};"],"sourceRoot":""}